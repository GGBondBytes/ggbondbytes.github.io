{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"node_modules/hexo-theme-landscape/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.css","path":"fancybox/jquery.fancybox.min.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.js","path":"fancybox/jquery.fancybox.min.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/js/jquery-3.6.4.min.js","path":"js/jquery-3.6.4.min.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/favicon.png","path":"favicon.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/barrager.css","path":"css/barrager.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/bb.css","path":"css/bb.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/dark.css","path":"css/dark.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/gallery.css","path":"css/gallery.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/indexcover.css","path":"css/indexcover.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/gitment.css","path":"css/gitment.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/matery.css","path":"css/matery.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/my-gitalk.css","path":"css/my-gitalk.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/my.css","path":"css/my.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/post.css","path":"css/post.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/reward.css","path":"css/reward.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/avatar.jpg","path":"medias/avatar.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/comment_bg.png","path":"medias/comment_bg.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/cover.jpg","path":"medias/cover.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/icp.png","path":"medias/icp.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/logo.png","path":"medias/logo.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/js/crypto-js.js","path":"js/crypto-js.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/js/gallery-encrypt.js","path":"js/gallery-encrypt.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/js/jquery.barrager.js","path":"js/jquery.barrager.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/js/matery.js","path":"js/matery.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/js/search.js","path":"js/search.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/js/tw_cn.js","path":"js/tw_cn.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/1.jpg","path":"medias/banner/1.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/0.jpg","path":"medias/banner/0.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/4.jpg","path":"medias/banner/4.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/3.jpg","path":"medias/banner/3.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/5.jpg","path":"medias/banner/5.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/6.jpg","path":"medias/banner/6.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/2.jpg","path":"medias/banner/2.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/barrager/0.png","path":"medias/barrager/0.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/barrager/2.png","path":"medias/barrager/2.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/barrager/1.png","path":"medias/barrager/1.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/barrager/close.png","path":"medias/barrager/close.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/0.jpg","path":"medias/featureimages/0.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/images/02.jpg","path":"medias/images/02.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/images/01.jpg","path":"medias/images/01.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/images/03.jpg","path":"medias/images/03.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/reward/alipay.jpg","path":"medias/reward/alipay.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/reward/wechat.png","path":"medias/reward/wechat.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/animate/animate.min.css","path":"libs/animate/animate.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/aos/aos.css","path":"libs/aos/aos.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/aos/aos.js","path":"libs/aos/aos.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeBlockFuction.js","path":"libs/codeBlock/codeBlockFuction.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeLang.js","path":"libs/codeBlock/codeLang.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeShrink.js","path":"libs/codeBlock/codeShrink.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/APlayer.min.css","path":"libs/aplayer/APlayer.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeCopy.js","path":"libs/codeBlock/codeCopy.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/APlayer.min.js","path":"libs/aplayer/APlayer.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/Meting.min.js","path":"libs/aplayer/Meting.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/background/canvas-nest.js","path":"libs/background/canvas-nest.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon-refresh.min.js","path":"libs/background/ribbon-refresh.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon-dynamic.js","path":"libs/background/ribbon-dynamic.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon.min.js","path":"libs/background/ribbon.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/dplayer/DPlayer.min.css","path":"libs/dplayer/DPlayer.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/dplayer/DPlayer.min.js","path":"libs/dplayer/DPlayer.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/cryptojs/crypto-js.min.js","path":"libs/cryptojs/crypto-js.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/echarts/echarts.min.js","path":"libs/echarts/echarts.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/fancybox/fancybox.js","path":"libs/fancybox/fancybox.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/fancybox/jquery.fancybox.css","path":"libs/fancybox/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/gitalk/gitalk.css","path":"libs/gitalk/gitalk.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/gitalk/gitalk.min.js","path":"libs/gitalk/gitalk.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/instantpage/instantpage.js","path":"libs/instantpage/instantpage.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/gitment/gitment.js","path":"libs/gitment/gitment.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/gitment/gitment-default.css","path":"libs/gitment/gitment-default.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/jquery/jquery-3.6.0.min.js","path":"libs/jquery/jquery-3.6.0.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/jqcloud/jqcloud-1.0.4.min.js","path":"libs/jqcloud/jqcloud-1.0.4.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/jqcloud/jqcloud.css","path":"libs/jqcloud/jqcloud.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/justifiedGallery/justifiedGallery.min.css","path":"libs/justifiedGallery/justifiedGallery.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/justifiedGallery/justifiedGallery.min.js","path":"libs/justifiedGallery/justifiedGallery.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/materialize/materialize.min.css","path":"libs/materialize/materialize.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/mermaid/mermaid.js","path":"libs/mermaid/mermaid.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/materialize/materialize.min.js","path":"libs/materialize/materialize.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/mermaid/mermaid.min.css","path":"libs/mermaid/mermaid.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/mermaid/mermaid.min.js","path":"libs/mermaid/mermaid.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/masonry/masonry.pkgd.min.js","path":"libs/masonry/masonry.pkgd.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/TencentCaptcha.js","path":"libs/others/TencentCaptcha.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/busuanzi.pure.mini.js","path":"libs/others/busuanzi.pure.mini.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/clicklove.js","path":"libs/others/clicklove.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/sakura-half.js","path":"libs/others/sakura-half.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/sakura-reduce.js","path":"libs/others/sakura-reduce.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/sakura-small.js","path":"libs/others/sakura-small.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/sakura.js","path":"libs/others/sakura.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/snow.js","path":"libs/others/snow.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/star.js","path":"libs/others/star.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/minivaline/MiniValine.js","path":"libs/minivaline/MiniValine.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/prism/prism.min.css","path":"libs/prism/prism.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/prism/prism.min.js","path":"libs/prism/prism.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/scrollprogress/scrollProgress.min.js","path":"libs/scrollprogress/scrollProgress.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/twikoo/twikoo.all.min.js","path":"libs/twikoo/twikoo.all.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/twikoo/twikoo.all.min.js.LICENSE.txt","path":"libs/twikoo/twikoo.all.min.js.LICENSE.txt","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/tocbot/tocbot.css","path":"libs/tocbot/tocbot.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/tocbot/tocbot.min.js","path":"libs/tocbot/tocbot.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/typed/typed.js","path":"libs/typed/typed.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/valine/Valine.min.js","path":"libs/valine/Valine.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/valine/av-min.js","path":"libs/valine/av-min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/waline/Waline.min.js","path":"libs/waline/Waline.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/css/all.css","path":"libs/awesome/css/all.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.ttf","path":"libs/awesome/webfonts/fa-brands-400.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/css/all.min.css","path":"libs/awesome/css/all.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.woff2","path":"libs/awesome/webfonts/fa-brands-400.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.ttf","path":"libs/awesome/webfonts/fa-regular-400.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.woff2","path":"libs/awesome/webfonts/fa-regular-400.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.ttf","path":"libs/awesome/webfonts/fa-solid-900.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-v4compatibility.ttf","path":"libs/awesome/webfonts/fa-v4compatibility.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.woff2","path":"libs/awesome/webfonts/fa-solid-900.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-v4compatibility.woff2","path":"libs/awesome/webfonts/fa-v4compatibility.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/css/lightgallery.min.css","path":"libs/lightGallery/css/lightgallery.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.svg","path":"libs/lightGallery/fonts/lg.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.ttf","path":"libs/lightGallery/fonts/lg.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.woff","path":"libs/lightGallery/fonts/lg.woff","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/js/lightgallery-all.min.js","path":"libs/lightGallery/js/lightgallery-all.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/loading.gif","path":"libs/lightGallery/img/loading.gif","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/video-play.png","path":"libs/lightGallery/img/video-play.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/vimeo-play.png","path":"libs/lightGallery/img/vimeo-play.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/youtube-play.png","path":"libs/lightGallery/img/youtube-play.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/css/share.min.css","path":"libs/share/css/share.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.eot","path":"libs/share/fonts/iconfont.eot","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.woff","path":"libs/share/fonts/iconfont.woff","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.svg","path":"libs/share/fonts/iconfont.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/js/jquery.share.min.js","path":"libs/share/js/jquery.share.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.ttf","path":"libs/share/fonts/iconfont.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/js/social-share.min.js","path":"libs/share/js/social-share.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/1.jpg","path":"medias/featureimages/1.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/2.jpg","path":"medias/featureimages/2.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/3.jpg","path":"medias/featureimages/3.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/4.jpg","path":"medias/featureimages/4.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/5.jpg","path":"medias/featureimages/5.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/6.jpg","path":"medias/featureimages/6.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/7.jpg","path":"medias/featureimages/7.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/background.jpg","path":"background.jpg","modified":0,"renderable":1},{"_id":"source/404.md","path":"404.md","modified":0,"renderable":0},{"_id":"source/categories/index.md","path":"categories/index.md","modified":0,"renderable":0},{"_id":"source/tools/index.md","path":"tools/index.md","modified":0,"renderable":0},{"_id":"source/photos/index.md","path":"photos/index.md","modified":0,"renderable":0}],"Cache":[{"_id":"source/_posts/hello-world.md","hash":"d01575dea9642da2cf697b12cf1bed5d01ce9102","modified":1690451888985},{"_id":"node_modules/hexo-theme-landscape/_config.yml","hash":"b608c1f1322760dce9805285a602a95832730a2e","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/README.md","hash":"1a9b279e6dd29fd19245f913f0c4a316ffaa62db","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/package.json","hash":"4bf95d52f77edf811f23f6d264a7493311a8d078","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/layout/layout.ejs","hash":"0d1765036e4874500e68256fedb7470e96eeb6ee","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/languages/de.yml","hash":"3ebf0775abbee928c8d7bda943c191d166ded0d3","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/languages/de-DE.yml","hash":"d29d1c4256b7ed9df42f511c2ff0a23ad5fd6c1f","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/languages/default.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/languages/en-GB.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/languages/en-US.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/languages/en.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/languages/es-ES.yml","hash":"7008a8fc91f18d2a735864817b8ebda30c7a2c66","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/languages/es.yml","hash":"76edb1171b86532ef12cfd15f5f2c1ac3949f061","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/languages/fr.yml","hash":"415e1c580ced8e4ce20b3b0aeedc3610341c76fb","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/languages/fr-FR.yml","hash":"8d09dbdab00a30a2870b56f7c0a7ca7deafa7b88","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/languages/hu.yml","hash":"284d557130bf54a74e7dcef9d42096130e4d9550","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/languages/hu-HU.yml","hash":"712d18664898fa21ba38d4973e90ef41a324ea25","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/languages/it-IT.yml","hash":"2cb6dc2fab9bd2dbe1c8bb869a9e8bf85a564fdd","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/languages/it.yml","hash":"89b7d91306b2c1a0f3ac023b657bf974f798a1e8","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/languages/ja-JP.yml","hash":"08481267e0c112e1f6855620f2837ec4c4a98bbd","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/languages/ja.yml","hash":"a73e1b9c80fd6e930e2628b393bfe3fb716a21a9","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/languages/ko-KR.yml","hash":"19209ad8f9d4057e8df808937f950eb265e1db69","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/languages/ko.yml","hash":"881d6a0a101706e0452af81c580218e0bfddd9cf","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/languages/mn-MN.yml","hash":"b9e5f3e7c0c2f779cf2cfded6db847b5941637ca","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/languages/mn.yml","hash":"2e7523951072a9403ead3840ad823edd1084c116","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/languages/nl-NL.yml","hash":"5ebbc30021f05d99938f96dfff280392df7f91f0","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/languages/pt-PT.yml","hash":"0f852b6b228e6ea59aa3540574bb89b233f2a098","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/languages/pt.yml","hash":"57d07b75d434fbfc33b0ddb543021cb5f53318a8","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/languages/ru-RU.yml","hash":"360d11a28bb768afb1dd15f63fa7fd3a8cc547ee","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/languages/th-TH.yml","hash":"ebfdba9bc4842c829473c1e6e4544344f182724d","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/languages/th.yml","hash":"84a55b00aa01f03982be294e43c33a20e6d32862","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/languages/tr.yml","hash":"a1cdbfa17682d7a971de8ab8588bf57c74224b5b","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/languages/zh-CN.yml","hash":"1efd95774f401c80193eac6ee3f1794bfe93dc5a","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/scripts/fancybox.js","hash":"c857d7a5e4a5d71c743a009c5932bf84229db428","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/after-footer.ejs","hash":"377d257d5d16e0158a4405c72401517b074fd7ff","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/archive.ejs","hash":"7cb70a7a54f8c7ae49b10d1f37c0a9b74eab8826","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/article.ejs","hash":"56597e951203dd662a6d2c817c7c4f1c920d4a25","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/footer.ejs","hash":"3656eb692254346671abc03cb3ba1459829e0dce","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/gauges-analytics.ejs","hash":"21a1e2a3907d1a3dad1cd0ab855fe6735f233c74","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/google-analytics.ejs","hash":"2ea7442ea1e1a8ab4e41e26c563f58413b59a3d0","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/header.ejs","hash":"6a5033d189554c9a6d42e2ef7952ae5c9742648e","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/head.ejs","hash":"f05bced793b0314d4f2ef0c993b3a51d0b7d203a","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/recent_posts.ejs","hash":"60c4b012dcc656438ff59997e60367e5a21ab746","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/source/css/_variables.styl","hash":"ca28281423ae57d76b6c1eb91cd845fd4e518bd6","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/source/css/style.styl","hash":"e55a1d92954ed20f6887f92dc727bb995a010a43","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/source/js/script.js","hash":"49773efcb2221bbdf2d86f3f5c5ff2d841b528cc","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/date.ejs","hash":"f1458584b679545830b75bef2526e2f3eb931045","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/title.ejs","hash":"4d7e62574ddf46de9b41605fe3140d77b5ddb26d","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/article.styl","hash":"2d1f6f79ebf9cb55ebdb3865a2474437eb2b37c6","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/header.styl","hash":"268d2989acb06e2ddd06cc36a6918c6cd865476b","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/highlight.styl","hash":"9cc3b2927d814f2f6e8e188f9d3657b94f4c6ef3","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/source/js/jquery-3.6.4.min.js","hash":"eda46747c71d38a880bee44f9a439c3858bb8f99","modified":1690424291471},{"_id":"node_modules/hexo-theme-landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1690424291471},{"_id":"public/2023/07/27/hello-world/index.html","hash":"f951f9a807b88f2d4595514e623ed4779d706e9b","modified":1690451724737},{"_id":"public/archives/index.html","hash":"46b293b383f10d17bf13f9165a4dff57ab91a60a","modified":1691030009693},{"_id":"public/archives/2023/index.html","hash":"03e5a1da55be5fe2ab3445db2e9be6ee538070cb","modified":1691030009693},{"_id":"public/archives/2023/07/index.html","hash":"1a9bbe70d869f434595c8266162122cca70948a4","modified":1691030009693},{"_id":"public/index.html","hash":"ca6d7d857562a3d94f5999eaafe09e6c9e37a286","modified":1690972635038},{"_id":"public/fancybox/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1690436612311},{"_id":"public/js/script.js","hash":"49773efcb2221bbdf2d86f3f5c5ff2d841b528cc","modified":1690436612311},{"_id":"public/css/style.css","hash":"ddb3792605d744ab3d9f0a649c82b62e9b16daa6","modified":1690436612311},{"_id":"public/fancybox/jquery.fancybox.min.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1690436612311},{"_id":"public/js/jquery-3.6.4.min.js","hash":"eda46747c71d38a880bee44f9a439c3858bb8f99","modified":1690436612311},{"_id":"public/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1690436612311},{"_id":"source/_posts/article-title.md","hash":"8a5a14b69ed7e3f2ced8ad3530fa58c3435b7192","modified":1690451888990},{"_id":"public/2023/07/27/article-title/index.html","hash":"e383775570a93c537bb2f8634d4d47c24ba2e34d","modified":1690451724737},{"_id":"themes/hexo-theme-matery/.gitignore","hash":"5340c994462c7345373e075529f40e60c1952f00","modified":1690439124031},{"_id":"themes/hexo-theme-matery/CHANGELOG.md","hash":"484a703733b839bd98e016ddb015f028c2593fef","modified":1690439124040},{"_id":"themes/hexo-theme-matery/LICENSE","hash":"b314c7ebb7d599944981908b7f3ed33a30e78f3a","modified":1690439124040},{"_id":"themes/hexo-theme-matery/README.md","hash":"6d8bcedba15ca33f2ed4ac2804b1df3ff8f21e0a","modified":1690439124041},{"_id":"themes/hexo-theme-matery/README_CN.md","hash":"97e12f438d3010d7957b9d1e8bff3346aeeab742","modified":1690439124041},{"_id":"themes/hexo-theme-matery/_config.yml","hash":"10bac3c37010c77c57d6c1e3c8e9172410bfe680","modified":1690531831317},{"_id":"themes/hexo-theme-matery/languages/default.yml","hash":"f5c69f3e107474da19630e136abed5d87609e59f","modified":1690439124042},{"_id":"themes/hexo-theme-matery/languages/zh-HK.yml","hash":"51c06005927e8bde5b3e23353d2bf2c32ed855f3","modified":1690439124043},{"_id":"themes/hexo-theme-matery/languages/jp.yml","hash":"c3d2849348bd52fab85b38040818b429057d3101","modified":1690439124042},{"_id":"themes/hexo-theme-matery/languages/zh-CN.yml","hash":"7aec7a3b9064711a518d2cb5cffbce0209bd18b7","modified":1690445927745},{"_id":"themes/hexo-theme-matery/layout/404.ejs","hash":"4d2bb286d9903f770344e11898bd3f13444760bf","modified":1690439124043},{"_id":"themes/hexo-theme-matery/layout/about.ejs","hash":"626d28dbc7fa2e0fb6601e324dcad08993bcf002","modified":1690439124055},{"_id":"themes/hexo-theme-matery/layout/archive.ejs","hash":"57733d52d17361e735fcc95f875e0b1b9ebdcbd8","modified":1690439124055},{"_id":"themes/hexo-theme-matery/layout/categories.ejs","hash":"c431e772d0f7700592228bbd9502793bdc28a893","modified":1690439124056},{"_id":"themes/hexo-theme-matery/layout/bb.ejs","hash":"6deb819e47fe11edd2fc87a6296cae725a0275f9","modified":1690439124056},{"_id":"themes/hexo-theme-matery/layout/category.ejs","hash":"4ac716d15d84e7c37f07308a5ec008a2ac090c9b","modified":1690439124056},{"_id":"themes/hexo-theme-matery/layout/contact.ejs","hash":"71ef2540fa586cd0c3b1f216f59fa9ec85fc6a38","modified":1690440768386},{"_id":"themes/hexo-theme-matery/layout/friends.ejs","hash":"7e92c983794c5c4a2b16eca2452eb187316262ef","modified":1690439124056},{"_id":"themes/hexo-theme-matery/layout/galleries.ejs","hash":"85b8b9e583ffa7a4ee6d0c2be4779cb2f7d91777","modified":1690439124057},{"_id":"themes/hexo-theme-matery/layout/index.ejs","hash":"eb3875f997767bc6c500a158535cfadcbca96f8f","modified":1690439124057},{"_id":"themes/hexo-theme-matery/layout/gallery.ejs","hash":"fcc7364b03329148ba4920cddb0d34d5b7410788","modified":1690439124057},{"_id":"themes/hexo-theme-matery/layout/layout.ejs","hash":"addaffb1ce8c36720d6af710b93708dbee66dac0","modified":1690448581657},{"_id":"themes/hexo-theme-matery/layout/movies.ejs","hash":"abce85ffdd99e787e3652fbd466447e032b626bd","modified":1690439124057},{"_id":"themes/hexo-theme-matery/layout/post.ejs","hash":"444ecca1cb35bad81b063f1d7cb9fd80ead195dd","modified":1690439124058},{"_id":"themes/hexo-theme-matery/layout/musics.ejs","hash":"9ac6053e09ed2c8a844d7e93c3fdce4ded95248a","modified":1690439124058},{"_id":"themes/hexo-theme-matery/layout/tags.ejs","hash":"851c0ee599e91e7b1d657673859e8b6ff79cf50b","modified":1690439124058},{"_id":"themes/hexo-theme-matery/layout/tag.ejs","hash":"058eb27ff10f5314d8b9e334c54419b9a6572315","modified":1690439124058},{"_id":"themes/hexo-theme-matery/source/favicon.png","hash":"774fee8c6d0be9dbb010b20f36c06848d06e3da0","modified":1690439124062},{"_id":"themes/hexo-theme-matery/layout/_partial/back-top.ejs","hash":"be527741c39c9dc4a13ad712b49fe8db0147fe1e","modified":1690439124043},{"_id":"themes/hexo-theme-matery/layout/_partial/baidu-push.ejs","hash":"2841870e0c625787de348221e5ddb7bbe99ec5a2","modified":1690439124044},{"_id":"themes/hexo-theme-matery/layout/_partial/baidu-analytics.ejs","hash":"4b01030b7136192bdbd704e29a0fe12f92767551","modified":1690439124044},{"_id":"themes/hexo-theme-matery/layout/_partial/background.ejs","hash":"442c710d69892eb56d3d257cf4c2e195e6913eea","modified":1690439124043},{"_id":"themes/hexo-theme-matery/layout/_partial/codeblock.ejs","hash":"a924658cbc1a1aeafe9fa455b08bd495071285a1","modified":1690439124045},{"_id":"themes/hexo-theme-matery/layout/_partial/bg-cover-content.ejs","hash":"8d6d4ac4bf6bfd3c7f4ffc534711fcdacc6711c0","modified":1690439124044},{"_id":"themes/hexo-theme-matery/layout/_partial/bg-cover.ejs","hash":"d5a7b9bb96e04c0a3485dd873748f19c50a6a04f","modified":1690439124044},{"_id":"themes/hexo-theme-matery/layout/_partial/bg-video.ejs","hash":"963422029eb5158eb5f5bc97ce19b66e5399db97","modified":1690439124044},{"_id":"themes/hexo-theme-matery/layout/_partial/cover-style.ejs","hash":"4288b9d91b2d71404e7a509a81a5d7f7a4b8b5e8","modified":1690439124045},{"_id":"themes/hexo-theme-matery/layout/_partial/changyan.ejs","hash":"cd919d31564e118c2ee8d5cbfb7d51ee6da15d82","modified":1690439124045},{"_id":"themes/hexo-theme-matery/layout/_partial/disqus.ejs","hash":"1b392f2160f962f62f3ddf5e1155c7f2f4888e1d","modified":1690439124045},{"_id":"themes/hexo-theme-matery/layout/_partial/footer.ejs","hash":"639a44ff0133cc1af9bc0dab13d2654443b447f8","modified":1690526685685},{"_id":"themes/hexo-theme-matery/layout/_partial/gitalk.ejs","hash":"27764936791ce36b527bea63689435346bbfb425","modified":1690439124046},{"_id":"themes/hexo-theme-matery/layout/_partial/google-analytics.ejs","hash":"890c8f04c1f4905dfceb3ea9fd6efdd040d79c01","modified":1690439124046},{"_id":"themes/hexo-theme-matery/layout/_partial/github-link.ejs","hash":"fd4034bca2eb3987dcf113e6477260bee97eb1e7","modified":1690439124046},{"_id":"themes/hexo-theme-matery/layout/_partial/gitment.ejs","hash":"90888c945384aa1ee4650bd43bd7ea670f25828c","modified":1690439124046},{"_id":"themes/hexo-theme-matery/layout/_partial/head.ejs","hash":"e10a37e82a4fc9c806025ad791e82c3b22fdfa4d","modified":1690439124046},{"_id":"themes/hexo-theme-matery/layout/_partial/header.ejs","hash":"4bcdbd27273dd1b7098d4cfa6479b5d6b138cd12","modified":1690439124046},{"_id":"themes/hexo-theme-matery/layout/_partial/main-style.ejs","hash":"8819b334509682355a5e53fa0f307f90166d175c","modified":1690439124047},{"_id":"themes/hexo-theme-matery/layout/_partial/index-cover.ejs","hash":"79a8aa0b574b4fc55b934d7ea8155570be2c5912","modified":1690509590815},{"_id":"themes/hexo-theme-matery/layout/_partial/livere.ejs","hash":"42728561c09589f79b698eb059ab4def53ed3642","modified":1690439124047},{"_id":"themes/hexo-theme-matery/layout/_partial/mobile-nav.ejs","hash":"f3d6b20ac07f1b096c5cf0b091523867fd4fd0b5","modified":1690439124047},{"_id":"themes/hexo-theme-matery/layout/_partial/navigation.ejs","hash":"c9ce806110db632d29bdb0eea3b55b1fb4b1aff3","modified":1690439124047},{"_id":"themes/hexo-theme-matery/layout/_partial/paging.ejs","hash":"d8773abab5d0b672b70a9df20a8f9f7f6b0a2dae","modified":1690439124048},{"_id":"themes/hexo-theme-matery/layout/_partial/post-cover.ejs","hash":"7f583c935253e2bf6421791715ee9de4989add6e","modified":1690439124048},{"_id":"themes/hexo-theme-matery/layout/_partial/post-detail-toc.ejs","hash":"05ac5b4df05e80e3123e464e7df2dfc589b0bbd2","modified":1690439124048},{"_id":"themes/hexo-theme-matery/layout/_partial/post-detail.ejs","hash":"3590cebe5d6729300f2ac83ff9e0ceceb66da4b9","modified":1690439124048},{"_id":"themes/hexo-theme-matery/layout/_partial/post-style.ejs","hash":"243c3ba783553f25955d524fd47a5bb59a5e732b","modified":1690439124048},{"_id":"themes/hexo-theme-matery/layout/_partial/post-statis.ejs","hash":"de0d5763ddd64463f43135678b64c044884b8406","modified":1690439124048},{"_id":"themes/hexo-theme-matery/layout/_partial/prev-next.ejs","hash":"1fb43f421de58aa24458f7d4a4cda44b8a3d62cc","modified":1690439124049},{"_id":"themes/hexo-theme-matery/layout/_partial/reprint-statement.ejs","hash":"f67bc52bc5a2464ebe30f42c65c0ee38eeec2fda","modified":1690439124049},{"_id":"themes/hexo-theme-matery/layout/_partial/reward-style.ejs","hash":"8256ed940c0185ccf01890d59fb4262f196e2323","modified":1690439124049},{"_id":"themes/hexo-theme-matery/layout/_partial/search.ejs","hash":"4218ed406c43ed781fe78ad8bf1834fa4b76b049","modified":1690439124050},{"_id":"themes/hexo-theme-matery/layout/_partial/reward.ejs","hash":"ab6de30729d48669476372ccd4aefa7e15d92c38","modified":1690439124049},{"_id":"themes/hexo-theme-matery/layout/_partial/share.ejs","hash":"e50fae64b6cfdbed18861eb49eca5018a920c7a4","modified":1690439124050},{"_id":"themes/hexo-theme-matery/layout/_partial/social-link.ejs","hash":"f640583d45179abc1ef57951e7f61fb9e10f44c9","modified":1690439124050},{"_id":"themes/hexo-theme-matery/layout/_partial/twikoo.ejs","hash":"d1d7c4da3d56f42541eea965a6ebf1f8e2fff0f4","modified":1690439124050},{"_id":"themes/hexo-theme-matery/layout/_partial/waline.ejs","hash":"beb3044890bfe7cfd26328565da4f8f955563424","modified":1690439124052},{"_id":"themes/hexo-theme-matery/layout/_partial/valine.ejs","hash":"5ee3ade52bc7494226ed30e7dd4531d1d91ca67c","modified":1690439124050},{"_id":"themes/hexo-theme-matery/layout/_widget/artitalk.ejs","hash":"b14e486f12b9ac42a273b80e4d785fcb94cf04b2","modified":1690439124052},{"_id":"themes/hexo-theme-matery/layout/_widget/category-cloud.ejs","hash":"3ef458166041a8a12e493cc5963a5af5d98c1dfc","modified":1690439124052},{"_id":"themes/hexo-theme-matery/layout/_widget/category-radar.ejs","hash":"131e2eabf6b216210efd0746300889adfee357be","modified":1690439124052},{"_id":"themes/hexo-theme-matery/layout/_widget/day-night.ejs","hash":"ff21dd5e49e1fc9a9ab8c7d164fd4b32a8265ea2","modified":1690439124053},{"_id":"themes/hexo-theme-matery/layout/_widget/music.ejs","hash":"d84f2f464209f02f49917423ac5accf1c548f38c","modified":1690439124053},{"_id":"themes/hexo-theme-matery/layout/_widget/dream.ejs","hash":"d6692f8c81013191fce59f47df1b6171649181ca","modified":1690439124053},{"_id":"themes/hexo-theme-matery/layout/_widget/my-gallery.ejs","hash":"f5259f18a906f2862fe72b90c28125b5f6b7d0b1","modified":1690439124053},{"_id":"themes/hexo-theme-matery/layout/_widget/musics.ejs","hash":"bfebdf0731fee0cd4fd51efa0da1d0184565ae25","modified":1690439124053},{"_id":"themes/hexo-theme-matery/layout/_widget/my-projects.ejs","hash":"141f19a8aa41b7a21436f23ce114bd5fda932512","modified":1690439124054},{"_id":"themes/hexo-theme-matery/layout/_widget/my-skills.ejs","hash":"9edbeb1ec6212762d597ae7a05b5a219f72c8f98","modified":1690439124054},{"_id":"themes/hexo-theme-matery/layout/_widget/post-calendar.ejs","hash":"fb5ee7674070956d134ddca6890a9bd3f398cc0f","modified":1690439124054},{"_id":"themes/hexo-theme-matery/layout/_widget/tag-cloud.ejs","hash":"d32898104477acef56c33d00a68b48db15dcf2e6","modified":1690439124055},{"_id":"themes/hexo-theme-matery/layout/_widget/recommend.ejs","hash":"5f64edd00d0a7c3b5e90d5ff99c9ebba61482d75","modified":1690439124054},{"_id":"themes/hexo-theme-matery/layout/_widget/video.ejs","hash":"c2f785f4986d6ed1da0d1f2cd339f33754625004","modified":1690439124055},{"_id":"themes/hexo-theme-matery/layout/_widget/tag-wordcloud.ejs","hash":"03dcd0a7a9fdbcc2bc38a99a8fad96ae17a340fa","modified":1690439124055},{"_id":"themes/hexo-theme-matery/layout/_widget/post-charts.ejs","hash":"20f0b6155eee348276dd91790f6a52b1005a0518","modified":1690439124054},{"_id":"themes/hexo-theme-matery/source/css/dark.css","hash":"541bc0b481beee921c62d0e84b61b124c95d2d01","modified":1690439124060},{"_id":"themes/hexo-theme-matery/source/css/bb.css","hash":"328a49b26ce663d9824c53aced118db4d55f2ac7","modified":1690439124059},{"_id":"themes/hexo-theme-matery/source/css/barrager.css","hash":"f59b2f1351d7977b676a4d51634b7dad648d3e99","modified":1690439124059},{"_id":"themes/hexo-theme-matery/source/css/gallery.css","hash":"015097ca1271dd44e6d663332587dbe58ae2ade8","modified":1690439124060},{"_id":"themes/hexo-theme-matery/source/css/indexcover.css","hash":"00f4f498ae8514022004f2281cab8ff304cd0f37","modified":1690439124061},{"_id":"themes/hexo-theme-matery/source/css/gitment.css","hash":"d5ef623065d1fbc897119f7b70ccf7563e329917","modified":1690439124060},{"_id":"themes/hexo-theme-matery/source/css/matery.css","hash":"62efb370ce317cf04404377708564fa677fdbd01","modified":1690443461942},{"_id":"themes/hexo-theme-matery/source/css/my-gitalk.css","hash":"52b3b36a0ed3db3bdf8bf1f999e37731078c485b","modified":1690439124061},{"_id":"themes/hexo-theme-matery/source/css/my.css","hash":"37683a9f11c68903a53e2b8593ca8c095a721896","modified":1690439124061},{"_id":"themes/hexo-theme-matery/source/css/post.css","hash":"1ebbf9ddee7db4b3039d8d4e25f2605072ab6e24","modified":1690439124062},{"_id":"themes/hexo-theme-matery/source/css/reward.css","hash":"56f8d21c3bb1dc57c762a63d13b08161d8260738","modified":1690439124062},{"_id":"themes/hexo-theme-matery/source/medias/avatar.jpg","hash":"2a6287308628881ce27b9a7de53ba15c2be00d02","modified":1690439124142},{"_id":"themes/hexo-theme-matery/source/medias/comment_bg.png","hash":"dfc93d24081884fbc58cab0f8fd19e77d31d6123","modified":1690439124150},{"_id":"themes/hexo-theme-matery/source/medias/logo.png","hash":"fa8a57ec2865d7f2d7b55af27deb24ab3306b263","modified":1690447918845},{"_id":"themes/hexo-theme-matery/source/medias/icp.png","hash":"27a96f31f7d0413c6ade6f40e06f021f501151c7","modified":1690439124164},{"_id":"themes/hexo-theme-matery/source/js/gallery-encrypt.js","hash":"f611a391d62da17b71f75577a72ad246ef6c5a71","modified":1690439124063},{"_id":"themes/hexo-theme-matery/source/js/matery.js","hash":"713eca7dcc8d4d02a03652367abc1afcc74e6c75","modified":1690439124064},{"_id":"themes/hexo-theme-matery/source/js/jquery.barrager.js","hash":"8db5b764f940614a209a332a4a11a53e5ea52fbc","modified":1690439124063},{"_id":"themes/hexo-theme-matery/source/js/search.js","hash":"72fac8fd3671f3525a574423985ee522958989d3","modified":1690439124064},{"_id":"themes/hexo-theme-matery/scripts/tags/button.js","hash":"18415c69461d706cf8039580cc79d00c029c637c","modified":1690439124059},{"_id":"themes/hexo-theme-matery/source/js/tw_cn.js","hash":"8ab118a6f3e115efb50283c0fe408ad91ce7021b","modified":1690439124064},{"_id":"themes/hexo-theme-matery/scripts/tags/index.js","hash":"223a31ea3aa4a689d45a033c7d680cb4fff8d8af","modified":1690439124059},{"_id":"themes/hexo-theme-matery/scripts/tags/note.js","hash":"98e7c48678c69f089d0d42f6d005c83265e9f400","modified":1690439124059},{"_id":"themes/hexo-theme-matery/source/medias/barrager/0.png","hash":"b30416fd3b3aec5af3fa90823a7e2e9c0af4cda8","modified":1690439124149},{"_id":"themes/hexo-theme-matery/source/medias/barrager/2.png","hash":"52b2b13373fe611ad2327b9b40426d6dc05b69cd","modified":1690439124149},{"_id":"themes/hexo-theme-matery/source/medias/barrager/1.png","hash":"b8c211690dba3addedfe7b928e3936cd487df0d6","modified":1690439124149},{"_id":"themes/hexo-theme-matery/source/medias/barrager/close.png","hash":"045346df61ee01abe5018c5d9ba805d2831ce7b1","modified":1690439124150},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/10.jpg","hash":"98e7f6fd9c97d4de9044b6871ca08ebf14db11b9","modified":1690439124153},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/13.jpg","hash":"35a320174f8e316e3eadaec658024276b651c6e9","modified":1690439124155},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/15.jpg","hash":"da0fbee3b7bde1607eace377ddf834c0be99edfe","modified":1690439124156},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/16.jpg","hash":"97a829c4bc94f9d2929b20a1a9b798c57b9f7205","modified":1690439124156},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/2.jpg","hash":"1349bd249371163088139a6015ace046b87ceb5e","modified":1690512762584},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/22.jpg","hash":"754579747a3e99747d890fca3162f370b96a7941","modified":1690439124160},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/21.jpg","hash":"b26edb128bb0bf58b23fd2f014e9555e89a2ca3b","modified":1690439124160},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/23.jpg","hash":"7d7f37da3fa7128343adac23866449eb2c6a549a","modified":1690439124160},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/3.jpg","hash":"9733b89f0a988f7817d19cea8ce2238c4c64d4b9","modified":1690512780230},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/5.jpg","hash":"83cd232e4cc135f29e07e37415ccd799f4608dd1","modified":1690512134490},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/7.jpg","hash":"c930201c2df19228a8d037208eb4017234a90d1f","modified":1690512161683},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/8.jpg","hash":"8e4b7186352085483ca1174c7c0800114c48df8b","modified":1690439124163},{"_id":"themes/hexo-theme-matery/source/medias/reward/alipay.jpg","hash":"1abc719b95d1b26f1f898e6b0a9b7609146e332f","modified":1690439124170},{"_id":"themes/hexo-theme-matery/source/medias/reward/wechat.png","hash":"fe93385aa92fe328e01c8221a80b039be9e4e140","modified":1690439124171},{"_id":"themes/hexo-theme-matery/source/libs/animate/animate.min.css","hash":"5dfcbcee866e9dc564916416281885f3e320871e","modified":1690439124065},{"_id":"themes/hexo-theme-matery/source/libs/aos/aos.css","hash":"ded9739f803d114c9168d3351fded72b3b478b4c","modified":1690439124065},{"_id":"themes/hexo-theme-matery/source/libs/aos/aos.js","hash":"5a8e6d07ffa55642418ab3fd4b263aa08284b77a","modified":1690439124065},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeLang.js","hash":"066d2c89ad429e44f6467b9267da782ccaad57de","modified":1690439124079},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeBlockFuction.js","hash":"a8133367d48199e7505c2d831ca848b4202b9ba6","modified":1690439124079},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/APlayer.min.css","hash":"7f4f8913f2d46ade2def5134e2cc8684a4b87939","modified":1690439124066},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeShrink.js","hash":"3edbe498f7bb9e7daa77f9db30e1b5eeab40e067","modified":1690439124079},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeCopy.js","hash":"6ab7871d36cab438bbd4d781bc1fe7618b46b6e7","modified":1690439124079},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/APlayer.min.js","hash":"70c0c4a9bf698747b7c058c21287ad617355e5dd","modified":1690439124066},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/Meting.min.js","hash":"ff60e62a9486505283582e8ad9226b35ba93d5c5","modified":1690439124067},{"_id":"themes/hexo-theme-matery/source/libs/background/canvas-nest.js","hash":"d2569ef80127ed2f4af7ef4d9f82b037794eec69","modified":1690439124078},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon-refresh.min.js","hash":"6d98692b2cad8c746a562db18b170b35c24402f4","modified":1690439124078},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon.min.js","hash":"6a99d494c030388f96f6086a7aaa0f03f3fe532e","modified":1690439124078},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon-dynamic.js","hash":"8f53dbd5f9a40c377664bf8ca0d5d5ed75b91757","modified":1690439124078},{"_id":"themes/hexo-theme-matery/source/libs/dplayer/DPlayer.min.css","hash":"5d52d3b34fceb9d7e11f1beaf7ed380b4249dec4","modified":1690439124080},{"_id":"themes/hexo-theme-matery/source/libs/cryptojs/crypto-js.min.js","hash":"33810b2b757fc4327bc1d3b83bb5e0d3dc1fec5b","modified":1690439124079},{"_id":"themes/hexo-theme-matery/source/libs/fancybox/jquery.fancybox.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1690439124087},{"_id":"themes/hexo-theme-matery/source/libs/gitalk/gitalk.css","hash":"4c0d5510ea487b0fe63e96464ab0b381565cc273","modified":1690439124087},{"_id":"themes/hexo-theme-matery/source/libs/instantpage/instantpage.js","hash":"043eba3c85c2e2009a9fabf3c4fc55537852fd86","modified":1690439124092},{"_id":"themes/hexo-theme-matery/source/libs/gitment/gitment-default.css","hash":"a0625d8b432af8bdc820f8768d36cde439e7257c","modified":1690439124091},{"_id":"themes/hexo-theme-matery/source/libs/jqcloud/jqcloud-1.0.4.min.js","hash":"26849509f196a2d21bbfd15696e5d5153163b8f1","modified":1690439124093},{"_id":"themes/hexo-theme-matery/source/libs/jqcloud/jqcloud.css","hash":"4e6538c8312aeeab845d361c37a8c1a0931241f0","modified":1690439124093},{"_id":"themes/hexo-theme-matery/source/libs/justifiedGallery/justifiedGallery.min.js","hash":"6f5433cc9f19ce2403e903e5d01a4c7b38f0969b","modified":1690439124094},{"_id":"themes/hexo-theme-matery/source/libs/justifiedGallery/justifiedGallery.min.css","hash":"b9323091d50785ad6c617d7cae76a41a89eb44b3","modified":1690439124094},{"_id":"themes/hexo-theme-matery/source/libs/mermaid/mermaid.min.css","hash":"1dbcd9312e57f2a0b569451d0028d88316614481","modified":1690439124119},{"_id":"themes/hexo-theme-matery/source/libs/masonry/masonry.pkgd.min.js","hash":"137e1c0f71e472fb7004c1832972287fb2dfc343","modified":1690439124099},{"_id":"themes/hexo-theme-matery/source/libs/others/TencentCaptcha.js","hash":"fb4d34c48567b7b992aac1c75f0d24c3eb2cc3fa","modified":1690439124125},{"_id":"themes/hexo-theme-matery/source/libs/others/busuanzi.pure.mini.js","hash":"6e41f31100ae7eb3a6f23f2c168f6dd56e7f7a9a","modified":1690439124126},{"_id":"themes/hexo-theme-matery/source/libs/others/clicklove.js","hash":"6a39b8c683ba5dcd92f70c6ab45d1cfac3213e8e","modified":1690439124126},{"_id":"themes/hexo-theme-matery/source/libs/others/sakura-half.js","hash":"a41b64af88fdd0e2d3502752d059661c1bc743dc","modified":1690439124126},{"_id":"themes/hexo-theme-matery/source/libs/others/sakura-reduce.js","hash":"f7527e9fb4e6fe2cc7c8880692d77bcda95900c7","modified":1690439124127},{"_id":"themes/hexo-theme-matery/source/libs/others/sakura-small.js","hash":"3284a9ab71454e574d80663f3a05735cd12a6a05","modified":1690439124127},{"_id":"themes/hexo-theme-matery/source/libs/others/sakura.js","hash":"b6ebe8f040c84f067300996a5f377846f01605fa","modified":1690439124127},{"_id":"themes/hexo-theme-matery/source/libs/others/snow.js","hash":"07b1e7932403b38aebb1c024ef3c3f5bb0c6aa2e","modified":1690439124128},{"_id":"themes/hexo-theme-matery/source/libs/others/star.js","hash":"1ddc9448fbba8915f9452b4f0a970f33635e46a7","modified":1690439124128},{"_id":"themes/hexo-theme-matery/source/libs/minivaline/MiniValine.js","hash":"f7f6cdc1b22297e02334e304444e9a8351acb455","modified":1690439124125},{"_id":"themes/hexo-theme-matery/source/libs/prism/prism.min.css","hash":"1aec6cfcbf8c833f728b8736060fe5690e19d92f","modified":1690439124128},{"_id":"themes/hexo-theme-matery/source/libs/scrollprogress/scrollProgress.min.js","hash":"777ffe5d07e85a14fbe97d846f45ffc0087251cc","modified":1690439124132},{"_id":"themes/hexo-theme-matery/source/libs/twikoo/twikoo.all.min.js.LICENSE.txt","hash":"6e1c8f7b23f06ca4c727c805fda053dc1d9193d0","modified":1690439124138},{"_id":"themes/hexo-theme-matery/source/libs/tocbot/tocbot.css","hash":"f646f2bb75bcd1eb65b2788ac7bf15d4fd243ce9","modified":1690439124135},{"_id":"themes/hexo-theme-matery/source/libs/tocbot/tocbot.min.js","hash":"39055053a477e7d54b46cfb46591f84cc3818eeb","modified":1690439124135},{"_id":"themes/hexo-theme-matery/source/libs/typed/typed.js","hash":"eceb98f80392cb57df1af5b160d85924f69fb2e0","modified":1690439124138},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.ttf","hash":"9b26d745a1e69b23d71b7ea36d5de1209c997901","modified":1690439124072},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.woff2","hash":"f7a09bcbd996fd634045d4e79b6504c945730686","modified":1690439124072},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-v4compatibility.ttf","hash":"3fc15c8154f8bd2d7bd1dfe55ae5ab1c33e5e40f","modified":1690439124077},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-v4compatibility.woff2","hash":"37ab2a6a0810d5a6c10a355fe1d7af0042bd6a2a","modified":1690439124077},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.svg","hash":"94c83160bddccf08bd7424de40d738716f1eeb3a","modified":1690439124095},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.ttf","hash":"49693fa946534a56d7e5d4274e1ce55b05d782c3","modified":1690439124095},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/css/lightgallery.min.css","hash":"7873d80020ae04955bb57521bd249a6974d1180f","modified":1690439124095},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.woff","hash":"04f09ad797ced119d6608909d06e500f16a03bbb","modified":1690439124095},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/loading.gif","hash":"15a76af2739482d8de7354abc6d8dc4fca8d145e","modified":1690439124096},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/js/lightgallery-all.min.js","hash":"c55278b00976c96e1df949ca5afee79b8ab385b2","modified":1690439124098},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/video-play.png","hash":"2962e03ddbe04d7e201a5acccac531a2bbccddfc","modified":1690439124096},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/vimeo-play.png","hash":"9b72fc0f86a01467ed0b68c9cc4d604ec316d517","modified":1690439124096},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/youtube-play.png","hash":"f8d11384d33b7a79ee2ba8d522844f14d5067a80","modified":1690439124096},{"_id":"themes/hexo-theme-matery/source/libs/share/css/share.min.css","hash":"7126de5cec8371e580b7b1f22512da0985cc39e5","modified":1690439124133},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.eot","hash":"00ff749c8e202401190cc98d56087cdda716abe4","modified":1690439124133},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.woff","hash":"2e3fce1dcfbd6e2114e7bfbeaf72d3c62e15a1bd","modified":1690439124134},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.svg","hash":"1d56c9d5db0273f07c43cc1397e440f98ba7827a","modified":1690439124133},{"_id":"themes/hexo-theme-matery/source/libs/share/js/jquery.share.min.js","hash":"de34668d902ec082d17ddb6dd7ad24255fb547c5","modified":1690439124134},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.ttf","hash":"afd898f59d363887418669520b24d175f966a083","modified":1690439124133},{"_id":"themes/hexo-theme-matery/source/libs/share/js/social-share.min.js","hash":"ba635a17a9d9d132369f9fe4b1fbcaf001ea6ac9","modified":1690439124135},{"_id":"themes/hexo-theme-matery/source/medias/banner/0.jpg","hash":"02781cb437e0a5aa6bf37c70a423de4083ecdb5f","modified":1690278508027},{"_id":"themes/hexo-theme-matery/source/medias/banner/3.jpg","hash":"a1a69336d33865928333660a5dbb26a831dbf631","modified":1690443804307},{"_id":"themes/hexo-theme-matery/source/medias/banner/2.jpg","hash":"844dfd064bb5b347fce2cbb80a0071dc21d7dbe6","modified":1690443798085},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/0.jpg","hash":"7cb628930b541ffc916d4585d485fa514fd816a2","modified":1690512712794},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/1.jpg","hash":"c0573c0006a6afedbbfa75d484a1f78ee9feb048","modified":1690512639983},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/11.jpg","hash":"f55972ce7175684f2b11c3c9fc2b5b14bccbfae8","modified":1690439124153},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/12.jpg","hash":"8a4b2e7d92ae95c3b0c921db23c35aa9a41a7d58","modified":1690439124154},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/14.jpg","hash":"38e11221406785bcd93aa9cd23e568e164630ef1","modified":1690439124155},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/17.jpg","hash":"42d47903551ee81885c1386022982cae165841c5","modified":1690439124157},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/18.jpg","hash":"64829272ec85bb819d55ff89e5b5fd6f64aa436b","modified":1690439124157},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/19.jpg","hash":"eb250906fdbc0c408f42ae9933725bc1a05d79fb","modified":1690439124158},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/20.jpg","hash":"3b11f9b461168d907073f793190865fe621a8573","modified":1690439124159},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/4.jpg","hash":"4275e0430dbcca915fc2361452aa7f2186b54d66","modified":1690512124456},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/6.jpg","hash":"b60eb0df44317a03fd0ff4a4cb7113dd26452965","modified":1690512147008},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/9.jpg","hash":"b956a2291a04b2132366b53666cf34858b8bdb1f","modified":1690439124164},{"_id":"themes/hexo-theme-matery/source/libs/fancybox/fancybox.js","hash":"eef46b6fb2e460838cd7328a6e13ecda0cb1e194","modified":1690439124087},{"_id":"themes/hexo-theme-matery/source/libs/gitment/gitment.js","hash":"5a13983930b019450e4fe01a407c64b3dd316be4","modified":1690439124092},{"_id":"themes/hexo-theme-matery/source/libs/jquery/jquery-3.6.0.min.js","hash":"4cd5ddc413b3024d7b56331c0d0d0b2bd933f27f","modified":1690439124094},{"_id":"themes/hexo-theme-matery/source/libs/awesome/css/all.min.css","hash":"6ceed6950e44336bb51f1b19d4658e4324afcebd","modified":1690439124069},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.woff2","hash":"e219af1e3bbc2219359d3d0916e263b279c4abfd","modified":1690439124071},{"_id":"themes/hexo-theme-matery/source/medias/cover.jpg","hash":"d4957ff7cc5e88555cd840f2956ab0561e6f1ccf","modified":1690439124151},{"_id":"themes/hexo-theme-matery/source/medias/banner/1.jpg","hash":"52295c4cdcfdf10dee5a4d65932f8cd6490caaa3","modified":1690443788566},{"_id":"themes/hexo-theme-matery/source/medias/banner/5.jpg","hash":"02781cb437e0a5aa6bf37c70a423de4083ecdb5f","modified":1690278508027},{"_id":"themes/hexo-theme-matery/source/medias/banner/6.jpg","hash":"02781cb437e0a5aa6bf37c70a423de4083ecdb5f","modified":1690278508027},{"_id":"themes/hexo-theme-matery/source/medias/images/02.jpg","hash":"a5b656606811f4d7e10307f48c0e3c373e0b886d","modified":1690439124167},{"_id":"themes/hexo-theme-matery/source/libs/dplayer/DPlayer.min.js","hash":"104613de917a8576ff26aaa36d1c0c7bb4730f4e","modified":1690439124081},{"_id":"themes/hexo-theme-matery/source/libs/materialize/materialize.min.css","hash":"39900eba9a277f1e21080781ecfe2c3d1df50050","modified":1690439124100},{"_id":"themes/hexo-theme-matery/source/libs/materialize/materialize.min.js","hash":"7b49078d6297002fcb3e9a40381756b7079fdf8c","modified":1690439124101},{"_id":"themes/hexo-theme-matery/source/libs/valine/Valine.min.js","hash":"c2f2b1b0346e28ceae19f4b3d174f033311aa060","modified":1690439124140},{"_id":"themes/hexo-theme-matery/source/libs/waline/Waline.min.js","hash":"3a17de5f24e0437c3c681b15f147ceef3980736f","modified":1690439124142},{"_id":"themes/hexo-theme-matery/source/libs/awesome/css/all.css","hash":"9a8303b1c6334e2500da617810206ece45a8ac6b","modified":1690439124068},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.ttf","hash":"fa5745d421c0fc90928626be98e9f8cf7580b327","modified":1690439124071},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.woff2","hash":"1979128e8ba1517d85f5e4ee505abf486c51557c","modified":1690439124077},{"_id":"themes/hexo-theme-matery/source/js/crypto-js.js","hash":"ddacd177f23f65ff97b93b0417048f51928ee17e","modified":1690439124063},{"_id":"themes/hexo-theme-matery/source/libs/valine/av-min.js","hash":"e47dd1412564cd6aacc4e0a596fd83074a747870","modified":1690439124141},{"_id":"themes/hexo-theme-matery/source/medias/banner/4.jpg","hash":"fcb195ba81546cf36a8625bbcb12d75b2b9aa410","modified":1690443810947},{"_id":"themes/hexo-theme-matery/source/medias/images/03.jpg","hash":"2bd3815508a9f5b0ae79aa780bc02ac80b2a354e","modified":1690439124169},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.ttf","hash":"e3339400ef6214cfa077d003daed2bfa659e2956","modified":1690439124076},{"_id":"themes/hexo-theme-matery/source/libs/twikoo/twikoo.all.min.js","hash":"d1ec95821873a81eddf4e5698698b39d54d2a8cc","modified":1690439124138},{"_id":"themes/hexo-theme-matery/source/medias/images/01.jpg","hash":"6a81f437fb876666bafaa98b2a09bd8bd7f21832","modified":1690439124167},{"_id":"themes/hexo-theme-matery/source/libs/prism/prism.min.js","hash":"80063546f828243e2345670701656b735fc3ead8","modified":1690439124132},{"_id":"themes/hexo-theme-matery/source/libs/echarts/echarts.min.js","hash":"8789b5e4daf0029a6c88f238f10e54d01c4fce82","modified":1690439124086},{"_id":"themes/hexo-theme-matery/source/libs/gitalk/gitalk.min.js","hash":"1df59d7e5481ac2917c7043b28883393675dcaf9","modified":1690439124091},{"_id":"themes/hexo-theme-matery/source/libs/mermaid/mermaid.min.js","hash":"5755d222f96a897b9f509d2859be21996a3dbfd0","modified":1690439124125},{"_id":"themes/hexo-theme-matery/source/libs/mermaid/mermaid.js","hash":"3889e37cafaaace5e745ccd3e10c9255e32cae3a","modified":1690439124119},{"_id":"public/favicon.png","hash":"774fee8c6d0be9dbb010b20f36c06848d06e3da0","modified":1690439445943},{"_id":"public/medias/avatar.jpg","hash":"2a6287308628881ce27b9a7de53ba15c2be00d02","modified":1690439445943},{"_id":"public/medias/comment_bg.png","hash":"dfc93d24081884fbc58cab0f8fd19e77d31d6123","modified":1690439445943},{"_id":"public/medias/icp.png","hash":"27a96f31f7d0413c6ade6f40e06f021f501151c7","modified":1690439445943},{"_id":"public/medias/logo.png","hash":"fa8a57ec2865d7f2d7b55af27deb24ab3306b263","modified":1690447979514},{"_id":"public/medias/barrager/0.png","hash":"b30416fd3b3aec5af3fa90823a7e2e9c0af4cda8","modified":1690439445943},{"_id":"public/medias/barrager/2.png","hash":"52b2b13373fe611ad2327b9b40426d6dc05b69cd","modified":1690439445943},{"_id":"public/medias/barrager/1.png","hash":"b8c211690dba3addedfe7b928e3936cd487df0d6","modified":1690439445943},{"_id":"public/medias/barrager/close.png","hash":"045346df61ee01abe5018c5d9ba805d2831ce7b1","modified":1690439445943},{"_id":"public/medias/featureimages/10.jpg","hash":"98e7f6fd9c97d4de9044b6871ca08ebf14db11b9","modified":1690439445943},{"_id":"public/medias/featureimages/13.jpg","hash":"35a320174f8e316e3eadaec658024276b651c6e9","modified":1690439445943},{"_id":"public/medias/featureimages/15.jpg","hash":"da0fbee3b7bde1607eace377ddf834c0be99edfe","modified":1690439445943},{"_id":"public/medias/featureimages/16.jpg","hash":"97a829c4bc94f9d2929b20a1a9b798c57b9f7205","modified":1690439445943},{"_id":"public/medias/featureimages/2.jpg","hash":"1349bd249371163088139a6015ace046b87ceb5e","modified":1690514096619},{"_id":"public/medias/featureimages/22.jpg","hash":"754579747a3e99747d890fca3162f370b96a7941","modified":1690439445943},{"_id":"public/medias/featureimages/21.jpg","hash":"b26edb128bb0bf58b23fd2f014e9555e89a2ca3b","modified":1690439445943},{"_id":"public/medias/featureimages/23.jpg","hash":"7d7f37da3fa7128343adac23866449eb2c6a549a","modified":1690439445943},{"_id":"public/medias/featureimages/3.jpg","hash":"9733b89f0a988f7817d19cea8ce2238c4c64d4b9","modified":1690514096619},{"_id":"public/medias/featureimages/5.jpg","hash":"83cd232e4cc135f29e07e37415ccd799f4608dd1","modified":1690514096619},{"_id":"public/medias/featureimages/7.jpg","hash":"c930201c2df19228a8d037208eb4017234a90d1f","modified":1690514096619},{"_id":"public/medias/featureimages/8.jpg","hash":"8e4b7186352085483ca1174c7c0800114c48df8b","modified":1690439445943},{"_id":"public/medias/reward/alipay.jpg","hash":"1abc719b95d1b26f1f898e6b0a9b7609146e332f","modified":1690439445943},{"_id":"public/medias/reward/wechat.png","hash":"fe93385aa92fe328e01c8221a80b039be9e4e140","modified":1690439445943},{"_id":"public/libs/twikoo/twikoo.all.min.js.LICENSE.txt","hash":"6e1c8f7b23f06ca4c727c805fda053dc1d9193d0","modified":1690439445943},{"_id":"public/libs/awesome/webfonts/fa-regular-400.ttf","hash":"9b26d745a1e69b23d71b7ea36d5de1209c997901","modified":1690439445943},{"_id":"public/libs/awesome/webfonts/fa-regular-400.woff2","hash":"f7a09bcbd996fd634045d4e79b6504c945730686","modified":1690439445943},{"_id":"public/libs/awesome/webfonts/fa-v4compatibility.ttf","hash":"3fc15c8154f8bd2d7bd1dfe55ae5ab1c33e5e40f","modified":1690439445943},{"_id":"public/libs/awesome/webfonts/fa-v4compatibility.woff2","hash":"37ab2a6a0810d5a6c10a355fe1d7af0042bd6a2a","modified":1690439445943},{"_id":"public/libs/lightGallery/fonts/lg.svg","hash":"94c83160bddccf08bd7424de40d738716f1eeb3a","modified":1690439445943},{"_id":"public/libs/lightGallery/fonts/lg.ttf","hash":"49693fa946534a56d7e5d4274e1ce55b05d782c3","modified":1690439445943},{"_id":"public/libs/lightGallery/fonts/lg.woff","hash":"04f09ad797ced119d6608909d06e500f16a03bbb","modified":1690439445943},{"_id":"public/libs/lightGallery/img/loading.gif","hash":"15a76af2739482d8de7354abc6d8dc4fca8d145e","modified":1690439445943},{"_id":"public/libs/lightGallery/img/video-play.png","hash":"2962e03ddbe04d7e201a5acccac531a2bbccddfc","modified":1690439445943},{"_id":"public/libs/lightGallery/img/vimeo-play.png","hash":"9b72fc0f86a01467ed0b68c9cc4d604ec316d517","modified":1690439445943},{"_id":"public/libs/lightGallery/img/youtube-play.png","hash":"f8d11384d33b7a79ee2ba8d522844f14d5067a80","modified":1690439445943},{"_id":"public/libs/share/fonts/iconfont.eot","hash":"00ff749c8e202401190cc98d56087cdda716abe4","modified":1690439445943},{"_id":"public/libs/share/fonts/iconfont.woff","hash":"2e3fce1dcfbd6e2114e7bfbeaf72d3c62e15a1bd","modified":1690439445943},{"_id":"public/libs/share/fonts/iconfont.svg","hash":"1d56c9d5db0273f07c43cc1397e440f98ba7827a","modified":1690439445943},{"_id":"public/libs/share/fonts/iconfont.ttf","hash":"afd898f59d363887418669520b24d175f966a083","modified":1690439445943},{"_id":"public/medias/banner/0.jpg","hash":"02781cb437e0a5aa6bf37c70a423de4083ecdb5f","modified":1690444038658},{"_id":"public/medias/banner/3.jpg","hash":"a1a69336d33865928333660a5dbb26a831dbf631","modified":1690444038658},{"_id":"public/medias/banner/2.jpg","hash":"844dfd064bb5b347fce2cbb80a0071dc21d7dbe6","modified":1690444038658},{"_id":"public/medias/featureimages/1.jpg","hash":"c0573c0006a6afedbbfa75d484a1f78ee9feb048","modified":1690514096619},{"_id":"public/medias/featureimages/0.jpg","hash":"7cb628930b541ffc916d4585d485fa514fd816a2","modified":1690514096619},{"_id":"public/medias/featureimages/11.jpg","hash":"f55972ce7175684f2b11c3c9fc2b5b14bccbfae8","modified":1690439445943},{"_id":"public/medias/featureimages/12.jpg","hash":"8a4b2e7d92ae95c3b0c921db23c35aa9a41a7d58","modified":1690439445943},{"_id":"public/medias/featureimages/14.jpg","hash":"38e11221406785bcd93aa9cd23e568e164630ef1","modified":1690439445943},{"_id":"public/medias/featureimages/17.jpg","hash":"42d47903551ee81885c1386022982cae165841c5","modified":1690439445943},{"_id":"public/medias/featureimages/18.jpg","hash":"64829272ec85bb819d55ff89e5b5fd6f64aa436b","modified":1690439445943},{"_id":"public/medias/featureimages/19.jpg","hash":"eb250906fdbc0c408f42ae9933725bc1a05d79fb","modified":1690439445943},{"_id":"public/medias/featureimages/20.jpg","hash":"3b11f9b461168d907073f793190865fe621a8573","modified":1690439445943},{"_id":"public/medias/featureimages/4.jpg","hash":"4275e0430dbcca915fc2361452aa7f2186b54d66","modified":1690514096619},{"_id":"public/medias/featureimages/6.jpg","hash":"b60eb0df44317a03fd0ff4a4cb7113dd26452965","modified":1690514096619},{"_id":"public/medias/featureimages/9.jpg","hash":"b956a2291a04b2132366b53666cf34858b8bdb1f","modified":1690439445943},{"_id":"public/libs/awesome/webfonts/fa-brands-400.woff2","hash":"e219af1e3bbc2219359d3d0916e263b279c4abfd","modified":1690439445943},{"_id":"public/css/barrager.css","hash":"862879d9313ed8d4c721fa32ef8f94ac2f0a28ae","modified":1690439445943},{"_id":"public/css/bb.css","hash":"aa15633888c7cf9baea8bb48d796c68b57cf14bf","modified":1690439445943},{"_id":"public/css/gallery.css","hash":"79dfdf68d675c17782271647283c568d086e4b98","modified":1690439445943},{"_id":"public/css/indexcover.css","hash":"bd027eb8192b4d1b0dc9b4f965fa264e8437f847","modified":1690439445943},{"_id":"public/css/gitment.css","hash":"2bd15cc17dca35ac3ecc0acf167a23a1dd362acd","modified":1690439445943},{"_id":"public/css/my-gitalk.css","hash":"af18dd29e58642c18bab9b89541767b494c468dd","modified":1690439445943},{"_id":"public/css/my.css","hash":"497e50351f7838f8546cac76850a42e7e380a110","modified":1690439445943},{"_id":"public/css/post.css","hash":"d38c71eddb8af1752c48eb48595fbaf89450ff40","modified":1690439445943},{"_id":"public/css/reward.css","hash":"98b32aabeb908727844af04c31f08da6cab08335","modified":1690439445943},{"_id":"public/js/jquery.barrager.js","hash":"19c8b2498ca1083e537f7f443172970912107f83","modified":1690439445943},{"_id":"public/js/gallery-encrypt.js","hash":"18dcfa4a8da8847b64be75f287f45c0e830bbcab","modified":1690439445943},{"_id":"public/js/matery.js","hash":"aa957ea8cf6787f0ed6095fedc6cb9d7d1bf3522","modified":1690439445943},{"_id":"public/js/search.js","hash":"5caa2d6e3d34c334ac68dfaafc81a583d6123382","modified":1690439445943},{"_id":"public/libs/codeBlock/codeShrink.js","hash":"201e8cd761b4be557247bdaf1ebc7c11c83194f6","modified":1690439445943},{"_id":"public/libs/aos/aos.js","hash":"02bfb40b0c4b6e9b0b4081218357145cbb327d74","modified":1690439445943},{"_id":"public/libs/codeBlock/codeLang.js","hash":"bac88b4d4e3679732d29bd037c34f089cf27cf05","modified":1690439445943},{"_id":"public/libs/codeBlock/codeBlockFuction.js","hash":"c7ab06d27a525b15b1eb69027135269e9b9132fb","modified":1690439445943},{"_id":"public/libs/aplayer/APlayer.min.css","hash":"07372a2ba507388d0fed166d761b1c2c2a659dce","modified":1690439445943},{"_id":"public/libs/codeBlock/codeCopy.js","hash":"6d39a766af62e625f177c4d5cf3adc35eed71e61","modified":1690439445943},{"_id":"public/libs/aplayer/Meting.min.js","hash":"f2b3d20b8bd64ccd031c64628f2b1323078ae324","modified":1690439445943},{"_id":"public/libs/background/canvas-nest.js","hash":"65333d0dbb9c1173a1b13031b230161fc42c8b2f","modified":1690439445943},{"_id":"public/libs/background/ribbon-refresh.min.js","hash":"6d98692b2cad8c746a562db18b170b35c24402f4","modified":1690439445943},{"_id":"public/libs/background/ribbon.min.js","hash":"6a99d494c030388f96f6086a7aaa0f03f3fe532e","modified":1690439445943},{"_id":"public/libs/background/ribbon-dynamic.js","hash":"052b80c29e6bc585aa28d4504b743bdbac220a88","modified":1690439445943},{"_id":"public/libs/fancybox/jquery.fancybox.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1690439445943},{"_id":"public/libs/instantpage/instantpage.js","hash":"83ce8919b1a69b2f1809ffaf99b52a8627e650e9","modified":1690439445943},{"_id":"public/libs/jqcloud/jqcloud-1.0.4.min.js","hash":"257eaae3020599e4939f50d5008a743827f25b8c","modified":1690439445943},{"_id":"public/libs/jqcloud/jqcloud.css","hash":"20d9f11a19d95c70e27cb922e0d6dccbec4eae89","modified":1690439445943},{"_id":"public/libs/justifiedGallery/justifiedGallery.min.css","hash":"89fb099880771c23dce3005a87db36053c8c491c","modified":1690439445943},{"_id":"public/libs/mermaid/mermaid.min.css","hash":"1dbcd9312e57f2a0b569451d0028d88316614481","modified":1690439445943},{"_id":"public/libs/others/TencentCaptcha.js","hash":"10a034ac0b4ebe97ec5916b092b36fa2d6e9edd0","modified":1690439445943},{"_id":"public/libs/others/busuanzi.pure.mini.js","hash":"6e41f31100ae7eb3a6f23f2c168f6dd56e7f7a9a","modified":1690439445943},{"_id":"public/libs/others/clicklove.js","hash":"6a39b8c683ba5dcd92f70c6ab45d1cfac3213e8e","modified":1690439445943},{"_id":"public/libs/others/snow.js","hash":"02b1eeaca737c47be637b304feb3d36d792ee0c4","modified":1690439445943},{"_id":"public/libs/others/star.js","hash":"cf32f8ce2a1a51ba65d3b6063fe2ee1482550190","modified":1690439445943},{"_id":"public/libs/minivaline/MiniValine.js","hash":"f7f6cdc1b22297e02334e304444e9a8351acb455","modified":1690439445943},{"_id":"public/libs/scrollprogress/scrollProgress.min.js","hash":"777ffe5d07e85a14fbe97d846f45ffc0087251cc","modified":1690439445943},{"_id":"public/libs/prism/prism.min.css","hash":"ed3896649670cf142e514685da2b060cca5fd43a","modified":1690439445943},{"_id":"public/libs/tocbot/tocbot.css","hash":"15601837bf8557c2fd111e4450ed4c8495fd11a0","modified":1690439445943},{"_id":"public/libs/typed/typed.js","hash":"eaf2798298790ec3fad17f6c68b5d3b02dfd069c","modified":1690439445943},{"_id":"public/libs/tocbot/tocbot.min.js","hash":"39055053a477e7d54b46cfb46591f84cc3818eeb","modified":1690439445943},{"_id":"public/libs/share/css/share.min.css","hash":"8a778a86f3ce9a042df6be63a9f1039631e351a5","modified":1690439445943},{"_id":"public/css/dark.css","hash":"be4ef08494f3c965d513d9413685c0e723f671cd","modified":1690439445943},{"_id":"public/css/matery.css","hash":"9e7a0fa017c44c6973f02717802a4b2980d2ed2c","modified":1690443480951},{"_id":"public/js/tw_cn.js","hash":"29157cdfa87aec28e56d3d5717d486bf4de07db6","modified":1690439445943},{"_id":"public/js/crypto-js.js","hash":"3dd73b6f13dc818a3a9c5c7424c1c4a9649b00a2","modified":1690439445943},{"_id":"public/libs/aos/aos.css","hash":"191a3705a8f63e589a50a0ff2f2c5559f1a1b6b2","modified":1690439445943},{"_id":"public/libs/animate/animate.min.css","hash":"97afa151569f046b2e01f27c1871646e9cd87caf","modified":1690439445943},{"_id":"public/libs/aplayer/APlayer.min.js","hash":"22caa28ff6b41a16ff40f15d38f1739e22359478","modified":1690439445943},{"_id":"public/libs/dplayer/DPlayer.min.css","hash":"f7d19655f873b813ffba5d1a17145c91f82631b8","modified":1690439445943},{"_id":"public/libs/cryptojs/crypto-js.min.js","hash":"5989527a378b55011a59522f41eeb3981518325c","modified":1690439445943},{"_id":"public/libs/dplayer/DPlayer.min.js","hash":"490148a22ab2b03a880495cc733ecd1840c02ed6","modified":1690439445943},{"_id":"public/libs/gitalk/gitalk.css","hash":"61d71cb30f5f34cbb1f2b5bc469784d6cb908c22","modified":1690439445943},{"_id":"public/libs/fancybox/fancybox.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1690439445943},{"_id":"public/libs/gitment/gitment-default.css","hash":"2903c59ee06b965bef32e937bd69f5b0b2190717","modified":1690439445943},{"_id":"public/libs/gitment/gitment.js","hash":"28c02c45ce568e084cd1041dc493f83f9c6c88c6","modified":1690439445943},{"_id":"public/libs/jquery/jquery-3.6.0.min.js","hash":"b82d238d4e31fdf618bae8ac11a6c812c03dd0d4","modified":1690439445943},{"_id":"public/libs/justifiedGallery/justifiedGallery.min.js","hash":"82ab395176c927ffbb2f7c95132ee0a06cd5d64a","modified":1690439445943},{"_id":"public/libs/materialize/materialize.min.css","hash":"d1328a7872827bc63e7cc4d33745397681accda8","modified":1690439445943},{"_id":"public/libs/materialize/materialize.min.js","hash":"8eee32acbfac59744b4053a7290f503ef623d3ab","modified":1690439445943},{"_id":"public/libs/masonry/masonry.pkgd.min.js","hash":"d20252cf76c3be8af37a8415d13ad368c762b4d8","modified":1690439445943},{"_id":"public/libs/others/sakura-half.js","hash":"a41b64af88fdd0e2d3502752d059661c1bc743dc","modified":1690439445943},{"_id":"public/libs/others/sakura-small.js","hash":"3284a9ab71454e574d80663f3a05735cd12a6a05","modified":1690439445943},{"_id":"public/libs/others/sakura.js","hash":"9e196ab241799126e6a2dd23ee1708b1505ccbf0","modified":1690439445943},{"_id":"public/libs/others/sakura-reduce.js","hash":"f7527e9fb4e6fe2cc7c8880692d77bcda95900c7","modified":1690439445943},{"_id":"public/libs/valine/Valine.min.js","hash":"d081a412c63411a75a3a880ddece65335d1c3ee8","modified":1690439445943},{"_id":"public/libs/twikoo/twikoo.all.min.js","hash":"c3f5f0a69b7864e7ef5bbf99fc774bec37947d7c","modified":1690439445943},{"_id":"public/libs/valine/av-min.js","hash":"db56ef6acb789da00d39bd6b97c1b09c2d429195","modified":1690439445943},{"_id":"public/libs/lightGallery/css/lightgallery.min.css","hash":"7873d80020ae04955bb57521bd249a6974d1180f","modified":1690439445943},{"_id":"public/libs/awesome/css/all.min.css","hash":"0ae47fa834fb55de7b50c79021aeabecfae50c9c","modified":1690439445943},{"_id":"public/libs/share/js/jquery.share.min.js","hash":"41367dcb857e02e3c417ebe68a554ce1d4430806","modified":1690439445943},{"_id":"public/libs/lightGallery/js/lightgallery-all.min.js","hash":"aab2633f69581c2e26e22a23712f1501d7fcec18","modified":1690439445943},{"_id":"public/libs/waline/Waline.min.js","hash":"94f70e622e2a1ab05adb205033a9ddf371c61534","modified":1690439445943},{"_id":"public/libs/awesome/css/all.css","hash":"8d63fa8b0f60a50b07ac0f7e751f6f5e02ecdc44","modified":1690439445943},{"_id":"public/libs/share/js/social-share.min.js","hash":"a3090a02786dcd4efc6355c1c1dc978add8d6827","modified":1690439445943},{"_id":"public/medias/cover.jpg","hash":"d4957ff7cc5e88555cd840f2956ab0561e6f1ccf","modified":1690439445943},{"_id":"public/medias/banner/1.jpg","hash":"52295c4cdcfdf10dee5a4d65932f8cd6490caaa3","modified":1690444038658},{"_id":"public/medias/banner/6.jpg","hash":"02781cb437e0a5aa6bf37c70a423de4083ecdb5f","modified":1690444038658},{"_id":"public/medias/banner/5.jpg","hash":"02781cb437e0a5aa6bf37c70a423de4083ecdb5f","modified":1690444038658},{"_id":"public/medias/images/02.jpg","hash":"a5b656606811f4d7e10307f48c0e3c373e0b886d","modified":1690439445943},{"_id":"public/libs/awesome/webfonts/fa-brands-400.ttf","hash":"fa5745d421c0fc90928626be98e9f8cf7580b327","modified":1690439445943},{"_id":"public/libs/awesome/webfonts/fa-solid-900.woff2","hash":"1979128e8ba1517d85f5e4ee505abf486c51557c","modified":1690439445943},{"_id":"public/libs/gitalk/gitalk.min.js","hash":"564fc7c731d05fa70d71ef853a2c8cc7725739e2","modified":1690439445943},{"_id":"public/libs/echarts/echarts.min.js","hash":"9496f386a0da4601cad22c479cc5543913a4d67f","modified":1690439445943},{"_id":"public/libs/prism/prism.min.js","hash":"6fc9b7be93e51b4017a61483c13187af0149f194","modified":1690439445943},{"_id":"public/libs/mermaid/mermaid.min.js","hash":"6bee48c26c32b90f50519f125890fcbb04779da6","modified":1690439445943},{"_id":"public/medias/banner/4.jpg","hash":"fcb195ba81546cf36a8625bbcb12d75b2b9aa410","modified":1690444038658},{"_id":"public/medias/images/03.jpg","hash":"2bd3815508a9f5b0ae79aa780bc02ac80b2a354e","modified":1690439445943},{"_id":"public/libs/awesome/webfonts/fa-solid-900.ttf","hash":"e3339400ef6214cfa077d003daed2bfa659e2956","modified":1690439445943},{"_id":"public/medias/images/01.jpg","hash":"6a81f437fb876666bafaa98b2a09bd8bd7f21832","modified":1690439445943},{"_id":"public/libs/mermaid/mermaid.js","hash":"a7933bef8aba190825ba7716497209187ac1de5d","modified":1690439445943},{"_id":"source/404.md","hash":"3a9e7258d00f14a95f7ce3dcad07227d7904b05c","modified":1690439812327},{"_id":"source/_data/friends.json","hash":"7ee55a5b032d2c2ad68566ad4dcb583c78c39d69","modified":1690455039971},{"_id":"source/contact/index.md","hash":"57fc2c8158f166e2b2ba7ace27692862ae982887","modified":1690439709378},{"_id":"source/categories/index.md","hash":"1a58ce16fe4f8fd2feb885b7b795b5db41a41f1d","modified":1690439668172},{"_id":"source/tags/index.md","hash":"0c323bd4fea1e851502698b6c644a2487641b852","modified":1690439686181},{"_id":"source/friends/index.md","hash":"4315aa4590db6c9cacc639c100bde04aebd510c2","modified":1690439733558},{"_id":"public/404.html","hash":"f4d71be58edbaa95064bf92509581740878a9421","modified":1690972521293},{"_id":"public/contact/index.html","hash":"8948595fac5d9cb4ddc18f71c48bf8bfbaec87a5","modified":1690514096619},{"_id":"public/tags/index.html","hash":"1d156fb01ea75a94523696b59d9e25460ee79966","modified":1690453833036},{"_id":"public/friends/index.html","hash":"7c61432362dfcc1bef4a0aff6cdd5babb25ae35c","modified":1690445732663},{"_id":"public/categories/index.html","hash":"27972dc19c12da0d15747d02a225545b0b8035e7","modified":1690972521293},{"_id":"source/photos/index.md","hash":"c0dad0dddedf6a08fbb105af3bd81fbf0978977c","modified":1690449463390},{"_id":"public/photos/index.html","hash":"480851a0d944b829728367707d066e45dda63703","modified":1690972521293},{"_id":"source/tools/index.md","hash":"4315aa4590db6c9cacc639c100bde04aebd510c2","modified":1690439733558},{"_id":"public/search.xml","hash":"20446759f4c98904dc675c7e1cca8ba21cf7bada","modified":1691032628188},{"_id":"public/tools/index.html","hash":"ca03368fac1afe2865ed4ba39227a19fa9d1fcfb","modified":1690972521293},{"_id":"source/_posts/测试测试.md","hash":"23641ea3e69f717f3e60618f825eb6641a257794","modified":1690451428869},{"_id":"public/categories/Markdown/index.html","hash":"840aa806153a4d999c8bdf426b550fa29f37d258","modified":1690451724737},{"_id":"public/archives/2018/index.html","hash":"ecf287602c8442cdab7b44f216c77b22612769ca","modified":1690451724737},{"_id":"public/2018/09/07/测试测试/index.html","hash":"92858ef12b41ca99a2bd7b15b344bbc1ce7543e8","modified":1690451724737},{"_id":"public/archives/2018/09/index.html","hash":"df7119527ada53d121ce3491280ce668c252c132","modified":1690451724737},{"_id":"public/tags/Typora/index.html","hash":"7fe9e1b9581620ccb991f5a1df999b5e9c999f76","modified":1690451724737},{"_id":"public/tags/Markdown/index.html","hash":"dbe7377d0a240966497bd3c1cd4e8fd1fa938f43","modified":1690451724737},{"_id":"source/_posts/render阶段.md","hash":"d98c6be81045a52cefc67069647c256bb6b906ab","modified":1690451974439},{"_id":"public/2023/07/27/render阶段/index.html","hash":"0c1ebd38bf42b781331db00734e9136d4b09329e","modified":1690453624798},{"_id":"public/tags/React/index.html","hash":"3c57d39172a9867d7ed0c8abc33329e11022ea7f","modified":1690972521293},{"_id":"source/_posts/高阶组件.md","hash":"5af134845060e02e2efdb35dd07aa0adfe293b69","modified":1690452954933},{"_id":"public/archives/2022/index.html","hash":"01760cb6cad4b5d8fae70a66bb9c5603c435d86c","modified":1691030009693},{"_id":"public/2022/07/14/高阶组件/index.html","hash":"092e4469e6c4dedfce42742f0c6fb3aa17227b4c","modified":1690453624798},{"_id":"public/archives/2022/07/index.html","hash":"6011860d915e3537bd50ca1b7654940da3d781aa","modified":1691030009693},{"_id":"source/_posts/debouncePromise.md","hash":"5c34aa5799ef3fa61d9ee9324ea55c2483efdc7f","modified":1690453502012},{"_id":"public/2022/07/14/debouncePromise/index.html","hash":"ae4d91a73fa865f21c66105452579439f5342593","modified":1690972521293},{"_id":"themes/hexo-theme-matery/source/background.jpg","hash":"77d59dadf310836d1b7ed6472670a56d1e9922c6","modified":1690512903102},{"_id":"public/background.jpg","hash":"77d59dadf310836d1b7ed6472670a56d1e9922c6","modified":1690514096619},{"_id":"source/_posts/事件系统.md","hash":"bf0df1f584a0232001da4ce23ea11c9a1a21e2cf","modified":1690535312974},{"_id":"public/2023/07/28/事件系统/index.html","hash":"c3ddb6d469520ce3968c349c30e3a56d6ccc6274","modified":1690972635038},{"_id":"public/tags/JavaScript/index.html","hash":"31b9601a8101290a66857850597d765a402e9fc2","modified":1690972521293},{"_id":"public/categories/React/index.html","hash":"07ea3dd68d61da34c67ac6c1fc8342dedaf2ffc2","modified":1690972521293},{"_id":"source/img/mixin.png","hash":"d511488a4f6bc9048fb4d40c0024cac21409d253","modified":1690534073896},{"_id":"public/img/mixin.png","hash":"d511488a4f6bc9048fb4d40c0024cac21409d253","modified":1690534243024},{"_id":"source/_posts/事件系统/mixin.png","hash":"d511488a4f6bc9048fb4d40c0024cac21409d253","modified":1690534073896},{"_id":"public/2023/07/28/事件系统/mixin.png","hash":"d511488a4f6bc9048fb4d40c0024cac21409d253","modified":1690535056005},{"_id":"source/_posts/执行上下文.md","hash":"d099d99ebcf8d8b128b5c1a9ae27a00079a31d2d","modified":1691032603041},{"_id":"public/2023/08/02/执行上下文/index.html","hash":"a47fc706eef7c772d53ecfab96729a41c44d0118","modified":1691032628188},{"_id":"public/categories/JavaScript/index.html","hash":"4a6f32f99a0e85b1eeaffd13e3af968f078b209d","modified":1690972635038},{"_id":"public/archives/2023/08/index.html","hash":"04e9adf4b5d94055f7357d80407c1ecad19c067f","modified":1691030009693},{"_id":"source/_posts/执行上下文/yuque_mind.jpeg","hash":"e5a1edcd7ac289c0620600b8925308b793e077b4","modified":1690972821989},{"_id":"public/2023/08/02/执行上下文/yuque_mind.jpeg","hash":"e5a1edcd7ac289c0620600b8925308b793e077b4","modified":1690973115057},{"_id":"source/_posts/执行上下文/执行栈.jpg","hash":"e5a1edcd7ac289c0620600b8925308b793e077b4","modified":1690972821989},{"_id":"public/2023/08/02/执行上下文/执行栈.jpg","hash":"e5a1edcd7ac289c0620600b8925308b793e077b4","modified":1690973384517},{"_id":"source/_posts/执行上下文/环境记录器.jpg","hash":"ba03265c802616cc7331b23b087fcf31d12d4e0e","modified":1690973467950},{"_id":"source/_posts/执行上下文/词法环境的组成部分.jpg","hash":"50fd621dea0eabba30bc5c4db01b5a2325426423","modified":1690973448317},{"_id":"public/2023/08/02/执行上下文/词法环境的组成部分.jpg","hash":"50fd621dea0eabba30bc5c4db01b5a2325426423","modified":1690973642205},{"_id":"public/2023/08/02/执行上下文/环境记录器.jpg","hash":"ba03265c802616cc7331b23b087fcf31d12d4e0e","modified":1690973642205},{"_id":"public/404.md","hash":"3a9e7258d00f14a95f7ce3dcad07227d7904b05c","modified":1690973844885},{"_id":"public/categories/index.md","hash":"1a58ce16fe4f8fd2feb885b7b795b5db41a41f1d","modified":1690973844885},{"_id":"public/tools/index.md","hash":"4315aa4590db6c9cacc639c100bde04aebd510c2","modified":1690973844885},{"_id":"public/photos/index.md","hash":"c0dad0dddedf6a08fbb105af3bd81fbf0978977c","modified":1690973844885},{"_id":"source/_posts/image/执行上下文/词法环境的组成部分.jpg","hash":"50fd621dea0eabba30bc5c4db01b5a2325426423","modified":1690973448317},{"_id":"source/_posts/image/执行上下文/环境记录器.jpg","hash":"ba03265c802616cc7331b23b087fcf31d12d4e0e","modified":1690973467950},{"_id":"source/_posts/image/执行上下文/执行栈.jpg","hash":"e5a1edcd7ac289c0620600b8925308b793e077b4","modified":1690972821989}],"Category":[{"name":"Markdown","_id":"clkkz43sx0001e0uu3n3t5wq0"},{"name":"React","_id":"clkmc6ern0000vouu4ocog7mb"},{"name":"JavaScript","_id":"clktldo5t0001r4uuh0iz3mec"}],"Data":[{"_id":"friends","data":[{"avatar":"https://static.nowcoder.com/fe/file/logo/1.png","name":"牛客网","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"https://www.nowcoder.com/","title":"前去学习"},{"avatar":"http://resource.muyiy.cn/image/javascript.gif","name":"木易杨前端进阶","introduction":"https://muyiy.cn/","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"https://lf1-cdn2-tos.bytegoofy.com/bydesign/iconparksite/static/media/logo_with_name.598fc011.svg","name":"Icon Park","url":"https://iconpark.oceanengine.com/home","title":"前去学习"},{"avatar":"https://static.nowcoder.com/fe/file/logo/1.png","name":"牛客网","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"https://www.nowcoder.com/","title":"前去学习"},{"avatar":"http://resource.muyiy.cn/image/javascript.gif","name":"木易杨前端进阶","introduction":"https://muyiy.cn/","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"https://lf1-cdn2-tos.bytegoofy.com/bydesign/iconparksite/static/media/logo_with_name.598fc011.svg","name":"Icon Park","url":"https://iconpark.oceanengine.com/home","title":"前去学习"},{"avatar":"https://static.nowcoder.com/fe/file/logo/1.png","name":"牛客网","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"https://www.nowcoder.com/","title":"前去学习"},{"avatar":"http://resource.muyiy.cn/image/javascript.gif","name":"木易杨前端进阶","introduction":"https://muyiy.cn/","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"https://lf1-cdn2-tos.bytegoofy.com/bydesign/iconparksite/static/media/logo_with_name.598fc011.svg","name":"Icon Park","url":"https://iconpark.oceanengine.com/home","title":"前去学习"}]}],"Page":[{"title":"404","date":"2023-07-27T06:36:23.000Z","type":"404","layout":"404","description":"Oops～，我崩溃了！找不到你想要的页面 :(","_content":"","source":"404.md","raw":"---\ntitle: 404\ndate: 2023-07-27 14:36:23\ntype: \"404\"\nlayout: \"404\"\ndescription: \"Oops～，我崩溃了！找不到你想要的页面 :(\"\n---","updated":"2023-07-27T06:36:52.327Z","path":"404.html","comments":1,"_id":"clkkskjds0000i0uu598p2lgs","content":"","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":""},{"title":"categories","date":"2023-07-27T06:33:49.000Z","type":"categories","layout":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2023-07-27 14:33:49\ntype: \"categories\"\nlayout: \"categories\"\n---\n","updated":"2023-07-27T06:34:28.172Z","path":"categories/index.html","comments":1,"_id":"clkkskjdx0004i0uu7v84a170","content":"","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":""},{"title":"相册","date":"2023-07-27T06:34:29.000Z","type":"photos","layout":"photos","_content":"","source":"photos/index.md","raw":"---\ntitle: 相册\ndate: 2023-07-27 14:34:29\ntype: \"photos\"\nlayout: \"photos\"\n---\n","updated":"2023-07-27T09:17:43.390Z","path":"photos/index.html","_id":"clkkvq9hf0000xkuu0jx3fk0v","comments":1,"content":"","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":""},{"title":"friends","date":"2023-07-27T06:35:23.000Z","type":"friends","layout":"friends","_content":"","source":"tools/index.md","raw":"---\ntitle: friends\ndate: 2023-07-27 14:35:23\ntype: \"friends\"\nlayout: \"friends\"\n---\n","updated":"2023-07-27T06:35:33.558Z","path":"tools/index.html","_id":"clkkvuvdo0000l0uu0lpagy5i","comments":1,"content":"","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":""}],"Post":[{"title":"debouncePromise","date":"2022-07-14T03:39:20.000Z","top":false,"_content":"\n```javascript\n// 中断当前promise\nfunction abortPromise(promise1) {\n  let abort;\n  const promise2 = new Promise((resolve, reject) => {\n    abort = reject;\n  });\n  const p = Promise.race([promise1, promise2]);\n  p.abort = abort;\n  return p;\n}\n// promise防抖\nexport function debouncePromise(fn, time) {\n  let promise;\n  return (...rest) => {\n    if (promise && typeof promise.abort === 'function') {\n      promise.abort();\n    }\n    const timeoutPromise = new Promise(resolve => {\n      setTimeout(() => {\n        resolve(undefined);\n      }, time);\n    });\n    promise = abortPromise(timeoutPromise);\n    return promise.then(() => fn(...rest));\n  };\n}\n```\n","source":"_posts/debouncePromise.md","raw":"---\ntitle: debouncePromise\ndate: 2022-07-14 11:39:20\ntop: false\ntags:\n- React\n---\n\n```javascript\n// 中断当前promise\nfunction abortPromise(promise1) {\n  let abort;\n  const promise2 = new Promise((resolve, reject) => {\n    abort = reject;\n  });\n  const p = Promise.race([promise1, promise2]);\n  p.abort = abort;\n  return p;\n}\n// promise防抖\nexport function debouncePromise(fn, time) {\n  let promise;\n  return (...rest) => {\n    if (promise && typeof promise.abort === 'function') {\n      promise.abort();\n    }\n    const timeoutPromise = new Promise(resolve => {\n      setTimeout(() => {\n        resolve(undefined);\n      }, time);\n    });\n    promise = abortPromise(timeoutPromise);\n    return promise.then(() => fn(...rest));\n  };\n}\n```\n","slug":"debouncePromise","published":1,"updated":"2023-07-27T10:25:02.012Z","_id":"clkl0brca0000youughb59jgv","comments":1,"layout":"post","photos":[],"link":"","content":"<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 中断当前promise</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">abortPromise</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">promise1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">let</span> abort<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> promise2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    abort <span class=\"token operator\">=</span> reject<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> p <span class=\"token operator\">=</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">race</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>promise1<span class=\"token punctuation\">,</span> promise2<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  p<span class=\"token punctuation\">.</span>abort <span class=\"token operator\">=</span> abort<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> p<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">// promise防抖</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">debouncePromise</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fn<span class=\"token punctuation\">,</span> time</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">let</span> promise<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token operator\">...</span>rest</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>promise <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">typeof</span> promise<span class=\"token punctuation\">.</span>abort <span class=\"token operator\">===</span> <span class=\"token string\">'function'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      promise<span class=\"token punctuation\">.</span><span class=\"token function\">abort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">const</span> timeoutPromise <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> time<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    promise <span class=\"token operator\">=</span> <span class=\"token function\">abortPromise</span><span class=\"token punctuation\">(</span>timeoutPromise<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> promise<span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>rest<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":"<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 中断当前promise</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">abortPromise</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">promise1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">let</span> abort<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> promise2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    abort <span class=\"token operator\">=</span> reject<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> p <span class=\"token operator\">=</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">race</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>promise1<span class=\"token punctuation\">,</span> promise2<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  p<span class=\"token punctuation\">.</span>abort <span class=\"token operator\">=</span> abort<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> p<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">// promise防抖</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">debouncePromise</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fn<span class=\"token punctuation\">,</span> time</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">let</span> promise<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token operator\">...</span>rest</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>promise <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">typeof</span> promise<span class=\"token punctuation\">.</span>abort <span class=\"token operator\">===</span> <span class=\"token string\">'function'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      promise<span class=\"token punctuation\">.</span><span class=\"token function\">abort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">const</span> timeoutPromise <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> time<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    promise <span class=\"token operator\">=</span> <span class=\"token function\">abortPromise</span><span class=\"token punctuation\">(</span>timeoutPromise<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> promise<span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>rest<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n"},{"title":"事件系统","top":false,"cover":false,"toc":true,"date":"2023-07-28T09:05:16.000Z","password":null,"summary":["React的事件系统、组件之间通信"],"_content":"# 事件系统\n\n虚拟dom在内存中以**对象**的形式存在，基于虚拟dom，实现了**SyntheticEvent（合成事件）**层，与原生事件拥有相同的接口，同样支持事件冒泡，可使用**stopPropagation(**)和**preventDefault()**中断。\n\n## SyntheticEvent的绑定方式\n\n- 驼峰式命名法命名属性（html为全部小写）\n- props可以为任意属性（html只接收字符串）\n\n## SyntheticEvent的实现机制\n\n### 事件委派\n\n事件代理机制，将所有的时间绑定到最外层，使用一个统一的**事件监听器**管理映射，当组件挂载卸载时，只需要在事件监听器上新增或者删除一些对象。当事件发生时，事件监听器先处理找到实际的事件函数调用，简化了**事件处理和回收机制，提升了效率。**\n\n### 事件绑定\n\n- **bind方法**\n\n```javascript\n<button onClick={this.btnClick.bind(this,'test')>\n```\n\n无传参时可简化：\n\n```javascript\n<button onClick={::this.btnClick}>\n```\n\n- **构造器内绑定**\n\n```javascript\nconstructor{\n  this.btnClick=this.btnClick.bind(this)\n}\n```\n\n- **箭头函数**\n\n```javascript\nbtnClick(e){}\n<button onClick={()=>this.btnClick()>\nconst btnClick=e=>{}\n<button onClick={this.btnClick>\n```\n\n### 使用原生事件\n\nclass组件在**componentDidMount中绑定原生事件**，但是需要注意的是，**在使用原生事件时，要在componentWillUnmount中手动移除，防止内存泄漏**\n\n```javascript\nclass Test extends Component {\n    componentDidMount() {\n        this.refs.button.addEventListener('click',e=>{\n            this.btnClick(e)\n        })\n    }\n    btnClick(e){\n        console.log(e);\n    }\n    componentWillUnmount() {\n        this.refs.button.removeEventListener('click')\n    }\n    render() {\n        return (\n            <button ref='button'>test</button>\n        );\n    }\n}\n```\n\n## SyntheticEvent和原生事件混用\n\n合成事件内部仅仅只是把最外层的容器进行了绑定，并依赖事件的冒泡机制完成事件委派。事件并不会绑定到真实的div上，所有使用stopProppagation没有用。\n\n**解决方案：**\n\n1. **不要混用合成事件和原生事件**\n2. **通过e?.target判断来避免**\n\n此外用reactEvent.nativeEvent.stopPropagation()来阻止冒泡是不行的，**阻止react事件冒泡的行为只能用于react合成事件当中，且无法阻止dom原生事件；反之，在原生事件中阻止冒泡，可以阻止react合成事件冒泡**\n\n**react的合成事件系统只是原生dom事件的子集。**有些方法还是需要用原生的dom事件完成，比如window的resize事件。\n\n## 对比原生事件和合成事件\n\n- **阻止事件传播与事件传播**\n\nreact只实现了阻止事件传播。\n\n原生的事件传播分为三个阶段：事件捕获阶段---->目标对象本身的事件程序处理程序调用---->事件冒泡。\n\n- **事件类型**\n\n合成事件系统只是原生dom事件的子集。\n\n- **事件绑定方式**\n\n直接在dom上绑定、在js中，通过为元素的事件属性赋值的方式(el.onclick=e=>console.log(e))、通过事件监听函数（addEventListener(先绑定先执行)、attachEvent(IE,后绑定先执行)）\n\n## 受控组件和非受控组件\n\n尽量避免使用非受控组件\n\n# 组件之间通信\n\n## 父子之间通信\n\nprops\n\n## 子父之间通信\n\n回调函数\n\n自定义事件机制\n\n## 跨级组件通信\n\ncontext,慎用，一般建议全局信息且不会更改，例如主题，用户信息，防止不知道context从哪里传过来。\n\n## 无嵌套关系的组价之间\n\n自定义事件\n\n## 总结\n\nPub/Sub模式的实现简单，即用全局对象保存事件、用广播的方式处理事件，缺点是逻辑混乱。应当避免使用，加入强依赖和约定是更好的方法\n\n# 组件间抽象\n\n## mixin\n\n### 引入minin的目的\n\n早期是为了为了创造一种类似多继承的效果。知道es6引入class才向着标准化靠拢。\n\n### 封装minin\n\n广义的mixin方法，就是用赋值的方式将mixin对象里面的方法挂载到原对象上面，来实现对对象的混入。\n\n```javascript\nconst mixin = (obj,mixins) => {\n  const newObj=obj;\n  newObj.prototype=Object.create(obj.prototype)\n  for (const mixinsKey in mixins) {\n    if (mixins.hasOwnProperty(mixinsKey)){\n      newObj.prototype[mixinsKey]=mixins[mixinsKey]\n    }\n  }\n}\n```\n\n### react中使用mixin\n\nreact在使用createClass构建组件时提供了mixin属性。比如**PureRenderMixin:**\n\n```javascript\nimport React from 'react';\nimpotr PureRenderMixin from 'react-addons-pure-render-mixin';\nReact.createClass({\n  mixin:[PureRenderMixin],\n  render(){\nreturn(<div>aaa</div>)\n}\n  )\n```\n\nmixin数组可增加多个mixin,**在不同的mixin实现两个相同的如同方法，后面的方法不会覆盖前面的方法，但是会报ReactClassInterface里面的错。因此，在React中不允许出现重名方法的mixin。**\n\n\n\n**使用ReactClass实现mixin为组件做了两件事：**\n\n- 共享一些工具方法\n- 生命周期的继承，props和state合并。\n\n### mixin缺点\n\n- 破坏了组件原有的封装\n- 命名冲突\n- 增加复杂性\n\n# 高阶组件\n\n## 属性代理\n\n**通过高阶组件来传递props，即为属性代理**\n\n\n\n使用属性代理时，不同于mixin，类似于**堆栈调用：**\n\n**didmount->HOC didmount->(HOCs didmount)->(HOCs will unmount)->HOC willunmount->unmount**\n\n功能：\n\n- 控制props\n\n可以增加，移除，编辑传进来的props，**应尽可能对高阶组件的props做新的命名。**\n\n- 通过refs使用引用\n- 抽象state\n\n高阶组件可以将原组件抽象为展示型组件，分离内部状态\n\n- 使用其他元素包裹组件\n\n**HOC与mixin不同：**\n\n**高阶组件符合函数式编程的，对于原组件来说，并不会感知到高阶组件的存在，只需要把功能套在其之上，避免了使用mixin时产生的副作用。**\n\n![](mixin.png)\n\n## 反向继承\n\n```javascript\nconst Test=(InputComponent)=>\n  class extends InputComponent{\n    render(){\n      return super.render()\n    }\n```\n\n如上，高阶组件的返回组件继承于InputComponent，因此被动的继承了InputComponent。方法可以通过super来调用，调用顺序与队列一致：\n\n**didmount->HOC didmount->(HOCs didmount)->will unmount->HOC will unmount->(HOCs willunmount)**\n\n- **渲染劫持**\n","source":"_posts/事件系统.md","raw":"---\ntitle: 事件系统\ntop: false\ncover: false\ntoc: true\ndate: 2023-07-28 17:05:16\ntags:\n- React\n- JavaScript\npassword:\nsummary:\n- React的事件系统、组件之间通信\ncategories:\n- React\n---\n# 事件系统\n\n虚拟dom在内存中以**对象**的形式存在，基于虚拟dom，实现了**SyntheticEvent（合成事件）**层，与原生事件拥有相同的接口，同样支持事件冒泡，可使用**stopPropagation(**)和**preventDefault()**中断。\n\n## SyntheticEvent的绑定方式\n\n- 驼峰式命名法命名属性（html为全部小写）\n- props可以为任意属性（html只接收字符串）\n\n## SyntheticEvent的实现机制\n\n### 事件委派\n\n事件代理机制，将所有的时间绑定到最外层，使用一个统一的**事件监听器**管理映射，当组件挂载卸载时，只需要在事件监听器上新增或者删除一些对象。当事件发生时，事件监听器先处理找到实际的事件函数调用，简化了**事件处理和回收机制，提升了效率。**\n\n### 事件绑定\n\n- **bind方法**\n\n```javascript\n<button onClick={this.btnClick.bind(this,'test')>\n```\n\n无传参时可简化：\n\n```javascript\n<button onClick={::this.btnClick}>\n```\n\n- **构造器内绑定**\n\n```javascript\nconstructor{\n  this.btnClick=this.btnClick.bind(this)\n}\n```\n\n- **箭头函数**\n\n```javascript\nbtnClick(e){}\n<button onClick={()=>this.btnClick()>\nconst btnClick=e=>{}\n<button onClick={this.btnClick>\n```\n\n### 使用原生事件\n\nclass组件在**componentDidMount中绑定原生事件**，但是需要注意的是，**在使用原生事件时，要在componentWillUnmount中手动移除，防止内存泄漏**\n\n```javascript\nclass Test extends Component {\n    componentDidMount() {\n        this.refs.button.addEventListener('click',e=>{\n            this.btnClick(e)\n        })\n    }\n    btnClick(e){\n        console.log(e);\n    }\n    componentWillUnmount() {\n        this.refs.button.removeEventListener('click')\n    }\n    render() {\n        return (\n            <button ref='button'>test</button>\n        );\n    }\n}\n```\n\n## SyntheticEvent和原生事件混用\n\n合成事件内部仅仅只是把最外层的容器进行了绑定，并依赖事件的冒泡机制完成事件委派。事件并不会绑定到真实的div上，所有使用stopProppagation没有用。\n\n**解决方案：**\n\n1. **不要混用合成事件和原生事件**\n2. **通过e?.target判断来避免**\n\n此外用reactEvent.nativeEvent.stopPropagation()来阻止冒泡是不行的，**阻止react事件冒泡的行为只能用于react合成事件当中，且无法阻止dom原生事件；反之，在原生事件中阻止冒泡，可以阻止react合成事件冒泡**\n\n**react的合成事件系统只是原生dom事件的子集。**有些方法还是需要用原生的dom事件完成，比如window的resize事件。\n\n## 对比原生事件和合成事件\n\n- **阻止事件传播与事件传播**\n\nreact只实现了阻止事件传播。\n\n原生的事件传播分为三个阶段：事件捕获阶段---->目标对象本身的事件程序处理程序调用---->事件冒泡。\n\n- **事件类型**\n\n合成事件系统只是原生dom事件的子集。\n\n- **事件绑定方式**\n\n直接在dom上绑定、在js中，通过为元素的事件属性赋值的方式(el.onclick=e=>console.log(e))、通过事件监听函数（addEventListener(先绑定先执行)、attachEvent(IE,后绑定先执行)）\n\n## 受控组件和非受控组件\n\n尽量避免使用非受控组件\n\n# 组件之间通信\n\n## 父子之间通信\n\nprops\n\n## 子父之间通信\n\n回调函数\n\n自定义事件机制\n\n## 跨级组件通信\n\ncontext,慎用，一般建议全局信息且不会更改，例如主题，用户信息，防止不知道context从哪里传过来。\n\n## 无嵌套关系的组价之间\n\n自定义事件\n\n## 总结\n\nPub/Sub模式的实现简单，即用全局对象保存事件、用广播的方式处理事件，缺点是逻辑混乱。应当避免使用，加入强依赖和约定是更好的方法\n\n# 组件间抽象\n\n## mixin\n\n### 引入minin的目的\n\n早期是为了为了创造一种类似多继承的效果。知道es6引入class才向着标准化靠拢。\n\n### 封装minin\n\n广义的mixin方法，就是用赋值的方式将mixin对象里面的方法挂载到原对象上面，来实现对对象的混入。\n\n```javascript\nconst mixin = (obj,mixins) => {\n  const newObj=obj;\n  newObj.prototype=Object.create(obj.prototype)\n  for (const mixinsKey in mixins) {\n    if (mixins.hasOwnProperty(mixinsKey)){\n      newObj.prototype[mixinsKey]=mixins[mixinsKey]\n    }\n  }\n}\n```\n\n### react中使用mixin\n\nreact在使用createClass构建组件时提供了mixin属性。比如**PureRenderMixin:**\n\n```javascript\nimport React from 'react';\nimpotr PureRenderMixin from 'react-addons-pure-render-mixin';\nReact.createClass({\n  mixin:[PureRenderMixin],\n  render(){\nreturn(<div>aaa</div>)\n}\n  )\n```\n\nmixin数组可增加多个mixin,**在不同的mixin实现两个相同的如同方法，后面的方法不会覆盖前面的方法，但是会报ReactClassInterface里面的错。因此，在React中不允许出现重名方法的mixin。**\n\n\n\n**使用ReactClass实现mixin为组件做了两件事：**\n\n- 共享一些工具方法\n- 生命周期的继承，props和state合并。\n\n### mixin缺点\n\n- 破坏了组件原有的封装\n- 命名冲突\n- 增加复杂性\n\n# 高阶组件\n\n## 属性代理\n\n**通过高阶组件来传递props，即为属性代理**\n\n\n\n使用属性代理时，不同于mixin，类似于**堆栈调用：**\n\n**didmount->HOC didmount->(HOCs didmount)->(HOCs will unmount)->HOC willunmount->unmount**\n\n功能：\n\n- 控制props\n\n可以增加，移除，编辑传进来的props，**应尽可能对高阶组件的props做新的命名。**\n\n- 通过refs使用引用\n- 抽象state\n\n高阶组件可以将原组件抽象为展示型组件，分离内部状态\n\n- 使用其他元素包裹组件\n\n**HOC与mixin不同：**\n\n**高阶组件符合函数式编程的，对于原组件来说，并不会感知到高阶组件的存在，只需要把功能套在其之上，避免了使用mixin时产生的副作用。**\n\n![](mixin.png)\n\n## 反向继承\n\n```javascript\nconst Test=(InputComponent)=>\n  class extends InputComponent{\n    render(){\n      return super.render()\n    }\n```\n\n如上，高阶组件的返回组件继承于InputComponent，因此被动的继承了InputComponent。方法可以通过super来调用，调用顺序与队列一致：\n\n**didmount->HOC didmount->(HOCs didmount)->will unmount->HOC will unmount->(HOCs willunmount)**\n\n- **渲染劫持**\n","slug":"事件系统","published":1,"updated":"2023-07-28T09:08:32.974Z","_id":"clkmc23nv0000w0uuenc98r49","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"事件系统\"><a href=\"#事件系统\" class=\"headerlink\" title=\"事件系统\"></a>事件系统</h1><p>虚拟dom在内存中以<strong>对象</strong>的形式存在，基于虚拟dom，实现了<strong>SyntheticEvent（合成事件）</strong>层，与原生事件拥有相同的接口，同样支持事件冒泡，可使用<strong>stopPropagation(</strong>)和**preventDefault()**中断。</p>\n<h2 id=\"SyntheticEvent的绑定方式\"><a href=\"#SyntheticEvent的绑定方式\" class=\"headerlink\" title=\"SyntheticEvent的绑定方式\"></a>SyntheticEvent的绑定方式</h2><ul>\n<li>驼峰式命名法命名属性（html为全部小写）</li>\n<li>props可以为任意属性（html只接收字符串）</li>\n</ul>\n<h2 id=\"SyntheticEvent的实现机制\"><a href=\"#SyntheticEvent的实现机制\" class=\"headerlink\" title=\"SyntheticEvent的实现机制\"></a>SyntheticEvent的实现机制</h2><h3 id=\"事件委派\"><a href=\"#事件委派\" class=\"headerlink\" title=\"事件委派\"></a>事件委派</h3><p>事件代理机制，将所有的时间绑定到最外层，使用一个统一的<strong>事件监听器</strong>管理映射，当组件挂载卸载时，只需要在事件监听器上新增或者删除一些对象。当事件发生时，事件监听器先处理找到实际的事件函数调用，简化了<strong>事件处理和回收机制，提升了效率。</strong></p>\n<h3 id=\"事件绑定\"><a href=\"#事件绑定\" class=\"headerlink\" title=\"事件绑定\"></a>事件绑定</h3><ul>\n<li><strong>bind方法</strong></li>\n</ul>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">btnClick</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span><span class=\"token string\">'test'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>无传参时可简化：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token operator\">:</span><span class=\"token operator\">:</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>btnClick<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li><strong>构造器内绑定</strong></li>\n</ul>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">constructor<span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>btnClick<span class=\"token operator\">=</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">btnClick</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li><strong>箭头函数</strong></li>\n</ul>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token function\">btnClick</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">btnClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">btnClick</span><span class=\"token operator\">=</span><span class=\"token parameter\">e</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>btnClick<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"使用原生事件\"><a href=\"#使用原生事件\" class=\"headerlink\" title=\"使用原生事件\"></a>使用原生事件</h3><p>class组件在<strong>componentDidMount中绑定原生事件</strong>，但是需要注意的是，<strong>在使用原生事件时，要在componentWillUnmount中手动移除，防止内存泄漏</strong></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Test</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>refs<span class=\"token punctuation\">.</span>button<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span><span class=\"token parameter\">e</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">btnClick</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token function\">btnClick</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token function\">componentWillUnmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>refs<span class=\"token punctuation\">.</span>button<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n            <span class=\"token operator\">&lt;</span>button ref<span class=\"token operator\">=</span><span class=\"token string\">'button'</span><span class=\"token operator\">></span>test<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"SyntheticEvent和原生事件混用\"><a href=\"#SyntheticEvent和原生事件混用\" class=\"headerlink\" title=\"SyntheticEvent和原生事件混用\"></a>SyntheticEvent和原生事件混用</h2><p>合成事件内部仅仅只是把最外层的容器进行了绑定，并依赖事件的冒泡机制完成事件委派。事件并不会绑定到真实的div上，所有使用stopProppagation没有用。</p>\n<p><strong>解决方案：</strong></p>\n<ol>\n<li><strong>不要混用合成事件和原生事件</strong></li>\n<li><strong>通过e?.target判断来避免</strong></li>\n</ol>\n<p>此外用reactEvent.nativeEvent.stopPropagation()来阻止冒泡是不行的，<strong>阻止react事件冒泡的行为只能用于react合成事件当中，且无法阻止dom原生事件；反之，在原生事件中阻止冒泡，可以阻止react合成事件冒泡</strong></p>\n<p><strong>react的合成事件系统只是原生dom事件的子集。</strong>有些方法还是需要用原生的dom事件完成，比如window的resize事件。</p>\n<h2 id=\"对比原生事件和合成事件\"><a href=\"#对比原生事件和合成事件\" class=\"headerlink\" title=\"对比原生事件和合成事件\"></a>对比原生事件和合成事件</h2><ul>\n<li><strong>阻止事件传播与事件传播</strong></li>\n</ul>\n<p>react只实现了阻止事件传播。</p>\n<p>原生的事件传播分为三个阶段：事件捕获阶段—-&gt;目标对象本身的事件程序处理程序调用—-&gt;事件冒泡。</p>\n<ul>\n<li><strong>事件类型</strong></li>\n</ul>\n<p>合成事件系统只是原生dom事件的子集。</p>\n<ul>\n<li><strong>事件绑定方式</strong></li>\n</ul>\n<p>直接在dom上绑定、在js中，通过为元素的事件属性赋值的方式(el.onclick&#x3D;e&#x3D;&gt;console.log(e))、通过事件监听函数（addEventListener(先绑定先执行)、attachEvent(IE,后绑定先执行)）</p>\n<h2 id=\"受控组件和非受控组件\"><a href=\"#受控组件和非受控组件\" class=\"headerlink\" title=\"受控组件和非受控组件\"></a>受控组件和非受控组件</h2><p>尽量避免使用非受控组件</p>\n<h1 id=\"组件之间通信\"><a href=\"#组件之间通信\" class=\"headerlink\" title=\"组件之间通信\"></a>组件之间通信</h1><h2 id=\"父子之间通信\"><a href=\"#父子之间通信\" class=\"headerlink\" title=\"父子之间通信\"></a>父子之间通信</h2><p>props</p>\n<h2 id=\"子父之间通信\"><a href=\"#子父之间通信\" class=\"headerlink\" title=\"子父之间通信\"></a>子父之间通信</h2><p>回调函数</p>\n<p>自定义事件机制</p>\n<h2 id=\"跨级组件通信\"><a href=\"#跨级组件通信\" class=\"headerlink\" title=\"跨级组件通信\"></a>跨级组件通信</h2><p>context,慎用，一般建议全局信息且不会更改，例如主题，用户信息，防止不知道context从哪里传过来。</p>\n<h2 id=\"无嵌套关系的组价之间\"><a href=\"#无嵌套关系的组价之间\" class=\"headerlink\" title=\"无嵌套关系的组价之间\"></a>无嵌套关系的组价之间</h2><p>自定义事件</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>Pub&#x2F;Sub模式的实现简单，即用全局对象保存事件、用广播的方式处理事件，缺点是逻辑混乱。应当避免使用，加入强依赖和约定是更好的方法</p>\n<h1 id=\"组件间抽象\"><a href=\"#组件间抽象\" class=\"headerlink\" title=\"组件间抽象\"></a>组件间抽象</h1><h2 id=\"mixin\"><a href=\"#mixin\" class=\"headerlink\" title=\"mixin\"></a>mixin</h2><h3 id=\"引入minin的目的\"><a href=\"#引入minin的目的\" class=\"headerlink\" title=\"引入minin的目的\"></a>引入minin的目的</h3><p>早期是为了为了创造一种类似多继承的效果。知道es6引入class才向着标准化靠拢。</p>\n<h3 id=\"封装minin\"><a href=\"#封装minin\" class=\"headerlink\" title=\"封装minin\"></a>封装minin</h3><p>广义的mixin方法，就是用赋值的方式将mixin对象里面的方法挂载到原对象上面，来实现对对象的混入。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">mixin</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">obj<span class=\"token punctuation\">,</span>mixins</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">const</span> newObj<span class=\"token operator\">=</span>obj<span class=\"token punctuation\">;</span>\n  newObj<span class=\"token punctuation\">.</span>prototype<span class=\"token operator\">=</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> mixinsKey <span class=\"token keyword\">in</span> mixins<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mixins<span class=\"token punctuation\">.</span><span class=\"token function\">hasOwnProperty</span><span class=\"token punctuation\">(</span>mixinsKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n      newObj<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">[</span>mixinsKey<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>mixins<span class=\"token punctuation\">[</span>mixinsKey<span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"react中使用mixin\"><a href=\"#react中使用mixin\" class=\"headerlink\" title=\"react中使用mixin\"></a>react中使用mixin</h3><p>react在使用createClass构建组件时提供了mixin属性。比如<strong>PureRenderMixin:</strong></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\nimpotr PureRenderMixin <span class=\"token keyword\">from</span> <span class=\"token string\">'react-addons-pure-render-mixin'</span><span class=\"token punctuation\">;</span>\nReact<span class=\"token punctuation\">.</span><span class=\"token function\">createClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">mixin</span><span class=\"token operator\">:</span><span class=\"token punctuation\">[</span>PureRenderMixin<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n<span class=\"token keyword\">return</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>aaa<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>mixin数组可增加多个mixin,<strong>在不同的mixin实现两个相同的如同方法，后面的方法不会覆盖前面的方法，但是会报ReactClassInterface里面的错。因此，在React中不允许出现重名方法的mixin。</strong></p>\n<p><strong>使用ReactClass实现mixin为组件做了两件事：</strong></p>\n<ul>\n<li>共享一些工具方法</li>\n<li>生命周期的继承，props和state合并。</li>\n</ul>\n<h3 id=\"mixin缺点\"><a href=\"#mixin缺点\" class=\"headerlink\" title=\"mixin缺点\"></a>mixin缺点</h3><ul>\n<li>破坏了组件原有的封装</li>\n<li>命名冲突</li>\n<li>增加复杂性</li>\n</ul>\n<h1 id=\"高阶组件\"><a href=\"#高阶组件\" class=\"headerlink\" title=\"高阶组件\"></a>高阶组件</h1><h2 id=\"属性代理\"><a href=\"#属性代理\" class=\"headerlink\" title=\"属性代理\"></a>属性代理</h2><p><strong>通过高阶组件来传递props，即为属性代理</strong></p>\n<p>使用属性代理时，不同于mixin，类似于<strong>堆栈调用：</strong></p>\n<p><strong>didmount-&gt;HOC didmount-&gt;(HOCs didmount)-&gt;(HOCs will unmount)-&gt;HOC willunmount-&gt;unmount</strong></p>\n<p>功能：</p>\n<ul>\n<li>控制props</li>\n</ul>\n<p>可以增加，移除，编辑传进来的props，<strong>应尽可能对高阶组件的props做新的命名。</strong></p>\n<ul>\n<li>通过refs使用引用</li>\n<li>抽象state</li>\n</ul>\n<p>高阶组件可以将原组件抽象为展示型组件，分离内部状态</p>\n<ul>\n<li>使用其他元素包裹组件</li>\n</ul>\n<p><strong>HOC与mixin不同：</strong></p>\n<p><strong>高阶组件符合函数式编程的，对于原组件来说，并不会感知到高阶组件的存在，只需要把功能套在其之上，避免了使用mixin时产生的副作用。</strong></p>\n<p><img src=\"/2023/07/28/%E4%BA%8B%E4%BB%B6%E7%B3%BB%E7%BB%9F/mixin.png\"></p>\n<h2 id=\"反向继承\"><a href=\"#反向继承\" class=\"headerlink\" title=\"反向继承\"></a>反向继承</h2><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Test</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">InputComponent</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span>\n  <span class=\"token keyword\">class</span> <span class=\"token class-name\">extends</span> InputComponent<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>如上，高阶组件的返回组件继承于InputComponent，因此被动的继承了InputComponent。方法可以通过super来调用，调用顺序与队列一致：</p>\n<p><strong>didmount-&gt;HOC didmount-&gt;(HOCs didmount)-&gt;will unmount-&gt;HOC will unmount-&gt;(HOCs willunmount)</strong></p>\n<ul>\n<li><strong>渲染劫持</strong></li>\n</ul>\n","site":{"data":{"friends":[{"avatar":"https://static.nowcoder.com/fe/file/logo/1.png","name":"牛客网","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"https://www.nowcoder.com/","title":"前去学习"},{"avatar":"http://resource.muyiy.cn/image/javascript.gif","name":"木易杨前端进阶","introduction":"https://muyiy.cn/","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"https://lf1-cdn2-tos.bytegoofy.com/bydesign/iconparksite/static/media/logo_with_name.598fc011.svg","name":"Icon Park","url":"https://iconpark.oceanengine.com/home","title":"前去学习"},{"avatar":"https://static.nowcoder.com/fe/file/logo/1.png","name":"牛客网","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"https://www.nowcoder.com/","title":"前去学习"},{"avatar":"http://resource.muyiy.cn/image/javascript.gif","name":"木易杨前端进阶","introduction":"https://muyiy.cn/","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"https://lf1-cdn2-tos.bytegoofy.com/bydesign/iconparksite/static/media/logo_with_name.598fc011.svg","name":"Icon Park","url":"https://iconpark.oceanengine.com/home","title":"前去学习"},{"avatar":"https://static.nowcoder.com/fe/file/logo/1.png","name":"牛客网","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"https://www.nowcoder.com/","title":"前去学习"},{"avatar":"http://resource.muyiy.cn/image/javascript.gif","name":"木易杨前端进阶","introduction":"https://muyiy.cn/","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"https://lf1-cdn2-tos.bytegoofy.com/bydesign/iconparksite/static/media/logo_with_name.598fc011.svg","name":"Icon Park","url":"https://iconpark.oceanengine.com/home","title":"前去学习"}]}},"excerpt":"","more":"<h1 id=\"事件系统\"><a href=\"#事件系统\" class=\"headerlink\" title=\"事件系统\"></a>事件系统</h1><p>虚拟dom在内存中以<strong>对象</strong>的形式存在，基于虚拟dom，实现了<strong>SyntheticEvent（合成事件）</strong>层，与原生事件拥有相同的接口，同样支持事件冒泡，可使用<strong>stopPropagation(</strong>)和**preventDefault()**中断。</p>\n<h2 id=\"SyntheticEvent的绑定方式\"><a href=\"#SyntheticEvent的绑定方式\" class=\"headerlink\" title=\"SyntheticEvent的绑定方式\"></a>SyntheticEvent的绑定方式</h2><ul>\n<li>驼峰式命名法命名属性（html为全部小写）</li>\n<li>props可以为任意属性（html只接收字符串）</li>\n</ul>\n<h2 id=\"SyntheticEvent的实现机制\"><a href=\"#SyntheticEvent的实现机制\" class=\"headerlink\" title=\"SyntheticEvent的实现机制\"></a>SyntheticEvent的实现机制</h2><h3 id=\"事件委派\"><a href=\"#事件委派\" class=\"headerlink\" title=\"事件委派\"></a>事件委派</h3><p>事件代理机制，将所有的时间绑定到最外层，使用一个统一的<strong>事件监听器</strong>管理映射，当组件挂载卸载时，只需要在事件监听器上新增或者删除一些对象。当事件发生时，事件监听器先处理找到实际的事件函数调用，简化了<strong>事件处理和回收机制，提升了效率。</strong></p>\n<h3 id=\"事件绑定\"><a href=\"#事件绑定\" class=\"headerlink\" title=\"事件绑定\"></a>事件绑定</h3><ul>\n<li><strong>bind方法</strong></li>\n</ul>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">btnClick</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span><span class=\"token string\">'test'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>无传参时可简化：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token operator\">:</span><span class=\"token operator\">:</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>btnClick<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li><strong>构造器内绑定</strong></li>\n</ul>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">constructor<span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>btnClick<span class=\"token operator\">=</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">btnClick</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li><strong>箭头函数</strong></li>\n</ul>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token function\">btnClick</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">btnClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">btnClick</span><span class=\"token operator\">=</span><span class=\"token parameter\">e</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>btnClick<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"使用原生事件\"><a href=\"#使用原生事件\" class=\"headerlink\" title=\"使用原生事件\"></a>使用原生事件</h3><p>class组件在<strong>componentDidMount中绑定原生事件</strong>，但是需要注意的是，<strong>在使用原生事件时，要在componentWillUnmount中手动移除，防止内存泄漏</strong></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Test</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>refs<span class=\"token punctuation\">.</span>button<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span><span class=\"token parameter\">e</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">btnClick</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token function\">btnClick</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token function\">componentWillUnmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>refs<span class=\"token punctuation\">.</span>button<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n            <span class=\"token operator\">&lt;</span>button ref<span class=\"token operator\">=</span><span class=\"token string\">'button'</span><span class=\"token operator\">></span>test<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"SyntheticEvent和原生事件混用\"><a href=\"#SyntheticEvent和原生事件混用\" class=\"headerlink\" title=\"SyntheticEvent和原生事件混用\"></a>SyntheticEvent和原生事件混用</h2><p>合成事件内部仅仅只是把最外层的容器进行了绑定，并依赖事件的冒泡机制完成事件委派。事件并不会绑定到真实的div上，所有使用stopProppagation没有用。</p>\n<p><strong>解决方案：</strong></p>\n<ol>\n<li><strong>不要混用合成事件和原生事件</strong></li>\n<li><strong>通过e?.target判断来避免</strong></li>\n</ol>\n<p>此外用reactEvent.nativeEvent.stopPropagation()来阻止冒泡是不行的，<strong>阻止react事件冒泡的行为只能用于react合成事件当中，且无法阻止dom原生事件；反之，在原生事件中阻止冒泡，可以阻止react合成事件冒泡</strong></p>\n<p><strong>react的合成事件系统只是原生dom事件的子集。</strong>有些方法还是需要用原生的dom事件完成，比如window的resize事件。</p>\n<h2 id=\"对比原生事件和合成事件\"><a href=\"#对比原生事件和合成事件\" class=\"headerlink\" title=\"对比原生事件和合成事件\"></a>对比原生事件和合成事件</h2><ul>\n<li><strong>阻止事件传播与事件传播</strong></li>\n</ul>\n<p>react只实现了阻止事件传播。</p>\n<p>原生的事件传播分为三个阶段：事件捕获阶段—-&gt;目标对象本身的事件程序处理程序调用—-&gt;事件冒泡。</p>\n<ul>\n<li><strong>事件类型</strong></li>\n</ul>\n<p>合成事件系统只是原生dom事件的子集。</p>\n<ul>\n<li><strong>事件绑定方式</strong></li>\n</ul>\n<p>直接在dom上绑定、在js中，通过为元素的事件属性赋值的方式(el.onclick&#x3D;e&#x3D;&gt;console.log(e))、通过事件监听函数（addEventListener(先绑定先执行)、attachEvent(IE,后绑定先执行)）</p>\n<h2 id=\"受控组件和非受控组件\"><a href=\"#受控组件和非受控组件\" class=\"headerlink\" title=\"受控组件和非受控组件\"></a>受控组件和非受控组件</h2><p>尽量避免使用非受控组件</p>\n<h1 id=\"组件之间通信\"><a href=\"#组件之间通信\" class=\"headerlink\" title=\"组件之间通信\"></a>组件之间通信</h1><h2 id=\"父子之间通信\"><a href=\"#父子之间通信\" class=\"headerlink\" title=\"父子之间通信\"></a>父子之间通信</h2><p>props</p>\n<h2 id=\"子父之间通信\"><a href=\"#子父之间通信\" class=\"headerlink\" title=\"子父之间通信\"></a>子父之间通信</h2><p>回调函数</p>\n<p>自定义事件机制</p>\n<h2 id=\"跨级组件通信\"><a href=\"#跨级组件通信\" class=\"headerlink\" title=\"跨级组件通信\"></a>跨级组件通信</h2><p>context,慎用，一般建议全局信息且不会更改，例如主题，用户信息，防止不知道context从哪里传过来。</p>\n<h2 id=\"无嵌套关系的组价之间\"><a href=\"#无嵌套关系的组价之间\" class=\"headerlink\" title=\"无嵌套关系的组价之间\"></a>无嵌套关系的组价之间</h2><p>自定义事件</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>Pub&#x2F;Sub模式的实现简单，即用全局对象保存事件、用广播的方式处理事件，缺点是逻辑混乱。应当避免使用，加入强依赖和约定是更好的方法</p>\n<h1 id=\"组件间抽象\"><a href=\"#组件间抽象\" class=\"headerlink\" title=\"组件间抽象\"></a>组件间抽象</h1><h2 id=\"mixin\"><a href=\"#mixin\" class=\"headerlink\" title=\"mixin\"></a>mixin</h2><h3 id=\"引入minin的目的\"><a href=\"#引入minin的目的\" class=\"headerlink\" title=\"引入minin的目的\"></a>引入minin的目的</h3><p>早期是为了为了创造一种类似多继承的效果。知道es6引入class才向着标准化靠拢。</p>\n<h3 id=\"封装minin\"><a href=\"#封装minin\" class=\"headerlink\" title=\"封装minin\"></a>封装minin</h3><p>广义的mixin方法，就是用赋值的方式将mixin对象里面的方法挂载到原对象上面，来实现对对象的混入。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">mixin</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">obj<span class=\"token punctuation\">,</span>mixins</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">const</span> newObj<span class=\"token operator\">=</span>obj<span class=\"token punctuation\">;</span>\n  newObj<span class=\"token punctuation\">.</span>prototype<span class=\"token operator\">=</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> mixinsKey <span class=\"token keyword\">in</span> mixins<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mixins<span class=\"token punctuation\">.</span><span class=\"token function\">hasOwnProperty</span><span class=\"token punctuation\">(</span>mixinsKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n      newObj<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">[</span>mixinsKey<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>mixins<span class=\"token punctuation\">[</span>mixinsKey<span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"react中使用mixin\"><a href=\"#react中使用mixin\" class=\"headerlink\" title=\"react中使用mixin\"></a>react中使用mixin</h3><p>react在使用createClass构建组件时提供了mixin属性。比如<strong>PureRenderMixin:</strong></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\nimpotr PureRenderMixin <span class=\"token keyword\">from</span> <span class=\"token string\">'react-addons-pure-render-mixin'</span><span class=\"token punctuation\">;</span>\nReact<span class=\"token punctuation\">.</span><span class=\"token function\">createClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">mixin</span><span class=\"token operator\">:</span><span class=\"token punctuation\">[</span>PureRenderMixin<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n<span class=\"token keyword\">return</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>aaa<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>mixin数组可增加多个mixin,<strong>在不同的mixin实现两个相同的如同方法，后面的方法不会覆盖前面的方法，但是会报ReactClassInterface里面的错。因此，在React中不允许出现重名方法的mixin。</strong></p>\n<p><strong>使用ReactClass实现mixin为组件做了两件事：</strong></p>\n<ul>\n<li>共享一些工具方法</li>\n<li>生命周期的继承，props和state合并。</li>\n</ul>\n<h3 id=\"mixin缺点\"><a href=\"#mixin缺点\" class=\"headerlink\" title=\"mixin缺点\"></a>mixin缺点</h3><ul>\n<li>破坏了组件原有的封装</li>\n<li>命名冲突</li>\n<li>增加复杂性</li>\n</ul>\n<h1 id=\"高阶组件\"><a href=\"#高阶组件\" class=\"headerlink\" title=\"高阶组件\"></a>高阶组件</h1><h2 id=\"属性代理\"><a href=\"#属性代理\" class=\"headerlink\" title=\"属性代理\"></a>属性代理</h2><p><strong>通过高阶组件来传递props，即为属性代理</strong></p>\n<p>使用属性代理时，不同于mixin，类似于<strong>堆栈调用：</strong></p>\n<p><strong>didmount-&gt;HOC didmount-&gt;(HOCs didmount)-&gt;(HOCs will unmount)-&gt;HOC willunmount-&gt;unmount</strong></p>\n<p>功能：</p>\n<ul>\n<li>控制props</li>\n</ul>\n<p>可以增加，移除，编辑传进来的props，<strong>应尽可能对高阶组件的props做新的命名。</strong></p>\n<ul>\n<li>通过refs使用引用</li>\n<li>抽象state</li>\n</ul>\n<p>高阶组件可以将原组件抽象为展示型组件，分离内部状态</p>\n<ul>\n<li>使用其他元素包裹组件</li>\n</ul>\n<p><strong>HOC与mixin不同：</strong></p>\n<p><strong>高阶组件符合函数式编程的，对于原组件来说，并不会感知到高阶组件的存在，只需要把功能套在其之上，避免了使用mixin时产生的副作用。</strong></p>\n<p><img src=\"/2023/07/28/%E4%BA%8B%E4%BB%B6%E7%B3%BB%E7%BB%9F/mixin.png\"></p>\n<h2 id=\"反向继承\"><a href=\"#反向继承\" class=\"headerlink\" title=\"反向继承\"></a>反向继承</h2><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Test</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">InputComponent</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span>\n  <span class=\"token keyword\">class</span> <span class=\"token class-name\">extends</span> InputComponent<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>如上，高阶组件的返回组件继承于InputComponent，因此被动的继承了InputComponent。方法可以通过super来调用，调用顺序与队列一致：</p>\n<p><strong>didmount-&gt;HOC didmount-&gt;(HOCs didmount)-&gt;will unmount-&gt;HOC will unmount-&gt;(HOCs willunmount)</strong></p>\n<ul>\n<li><strong>渲染劫持</strong></li>\n</ul>\n"},{"title":"执行上下文","top":true,"cover":false,"toc":true,"mathjax":true,"date":"2023-08-02T10:34:07.000Z","password":null,"summary":["JavaScript的执行上下文相关知识"],"_content":"\n{% blockquote  Sukhjinder Arora https://blog.bitsrc.io/understanding-execution-context-and-execution-stack-in-javascript-1c9ea8642dd0 Understanding Execution Context and Execution Stack in Javascript %}\n本文大部份内容引用翻译自Sukhjinder Arora的“了解 Javascript 中的执行上下文和执行堆栈”一文\n{% endblockquote %}\n\n\n# 什么是执行上下文\n\n执行上下文：抽象概念，评估和执行js代码的环境。当前执行环境的变量、函数声明、作用链域、this等信息\n\n# 执行上下文分类\n\n1. **全局执行上下文**   这是默认或者说基础的上下文，任何不在函数内部的代码都在全局上下文中。它会执行两件事：创建一个全局的 window 对象（浏览器的情况下），并且设置 `this` 的值等于这个全局对象。一个程序中只会有一个全局执行上下文。\n2. **函数执行上下文** — 每当一个函数被调用时, 都会为该函数创建一个新的上下文。每个函数都有它自己的执行上下文，不过是在函数被调用时创建的。函数上下文可以有任意多个。每当一个新的执行上下文被创建，它会按定义的顺序（将在后文讨论）执行一系列步骤。\n3. **Eval 函数执行上下文** — 执行在 `eval` 函数内部的代码也会有它属于自己的执行上下文，但由于 JavaScript 开发者并不经常使用 `eval`，所以在这里我不会讨论它。\n\n# 执行栈\n\n- js引擎第一次遇见js脚本，创建全局上下文，压栈；\n- 遇到函数调用，创建函数上下文，压栈；\n- 执行函数调用，出栈；\n- 所有代码执行完毕，js引擎从当前栈移除全局上下文\n\n```javascript\nlet a = 'Hello World!';\n\nfunction first() {\n  console.log('Inside first function');\n  second();\n  console.log('Again inside first function');\n}\n\nfunction second() {\n  console.log('Inside second function');\n}\n\nfirst();\nconsole.log('Inside Global Execution Context');\n```\n![执行栈图解](执行栈.jpg)\n\n# 执行上下文的生命周期\n\n## 创建阶段\n\n执行上下文在创建阶段做两件事情：\n创建词法环境组件（LexicalEnvironment）\n创建变量环境组件（VariableEnvironment）\n\n```javascript\nExecutionContext = {\n  LexicalEnvironment = <ref. to LexicalEnvironment in memory>,\n  VariableEnvironment = <ref. to VariableEnvironment in  memory>,\n}\n```\n\n### 词法环境（LexicalEnvironment）\n\n一种持有**标识符—变量映射**的结构。\n\n- **标识符**指的是变量/函数的名字\n- **变量**是对实际对象(包含函数类型对象)或原始数据的引用\n\n```javascript\nvar a = 20;\nvar b = 40;\nfunction foo() {\n  console.log('bar');\n}\n```\n\n上述代码的词法环境结构如下：\n\n```javascript\nlexicalEnvironment = {\n  a: 20,\n  b: 40,\n  foo: <ref. to foo function>\n}\n```\n\n### **词法环境的组成部分**：环境记录器、外部环境的引用、this绑定\n![词法环境的组成部分](词法环境的组成部分.jpg)\n\n#### **环境记录器**：环境记录是词法环境中存储变量和函数声明的地方\n![环境记录器的组成部分](环境记录器.jpg)\n\n{% blockquote %}\n对于函数代码而言，环境记录还包含一个参数对象，该对象包含传递给函数的索引和参数之间的映射，以及传递给函数的参数长度（个数)。例如，下面函数的参数对象如下所示：\n{% endblockquote %}\n\n```javascript\nfunction foo(a, b) {\n  var c = a + b;\n}\nfoo(2, 3);\n// argument object\nArguments: {0: 2, 1: 3, length: 2},\n```\n\n\n#### **外部环境的引用：**\n\n对外部环境的引用意味着它可以访问外部词法环境。\n也就是说，如果当前词法环境中没有变量，JavaScript 引擎可以在外部环境中查找这些变量。\n\n#### **this绑定：**\n\n在该组成部分中，this 的值被确定或设置。\n\n1. 在全局执行上下文中，this 的值指的是全局对象。(在浏览器中，它指的是窗口对象）。\n2. 在函数执行上下文中，this 的值取决于函数的调用方式。如果函数是通过对象引用调用的，则 this 的值将设置为该对象；否则，this 的值将设置为全局对象或未定义（在严格模式下）\n\n```javascript\nconst person = {\n  name: 'peter',\n  birthYear: 1994,\n  calcAge: function() {\n    console.log(2018 - this.birthYear);\n  }\n}\nperson.calcAge(); \n// 'this' refers to 'person', because 'calcAge' was called with //'person' object reference\nconst calculateAge = person.calcAge;\ncalculateAge();\n// 'this' refers to the global window object, because no object reference was given\n```\n\n抽象地说，词法环境在伪代码中是这样的：\n\n```javascript\nGlobalExectionContext = {\n  LexicalEnvironment: {\n    EnvironmentRecord: {\n      Type: \"Object\",\n      // Identifier bindings go here\n    }\n    outer: <null>,\n    this: <global object>\n  }\n}\nFunctionExectionContext = {\n  LexicalEnvironment: {\n    EnvironmentRecord: {\n      Type: \"Declarative\",\n      // Identifier bindings go here\n    }\n    outer: <Global or outer function environment reference>,\n    this: <depends on how function is called>\n  }\n}\n```\n\n### 可变环境\n\n它也是一个词法环境，其 EnvironmentRecord 保存着 VariableStatements 在此执行上下文中创建的绑定。\n**如上文所述，变量环境也是词法环境，因此它具有上文定义的词法环境的所有属性和组件。**\n在 ES6 中，**LexicalEnvironment 组件与 VariableEnvironment 组件的区别在于，前者用于存储函数声明和变量（let 和 const）绑定，而后者仅用于存储变量（var）绑定。**\n\n## 执行阶段\n\n在此阶段，完成对所有这些变量的分配，最后执行代码。\n\n```javascript\nlet a = 20;\nconst b = 30;\nvar c;\nfunction multiply(e, f) {\n var g = 20;\n return e * f * g;\n}\nc = multiply(20, 30);\n```\n\n执行上述代码时，JavaScript 引擎会创建一个全局执行上下文来执行全局代码。因此，在创建阶段，全局执行上下文将是这样的：\n\n```javascript\nGlobalExectionContext = {\n  LexicalEnvironment: {\n    EnvironmentRecord: {\n      Type: \"Object\",\n      // Identifier bindings go here\n      a: < uninitialized >,\n      b: < uninitialized >,\n      multiply: < func >\n    }\n    outer: <null>,\n    ThisBinding: <Global Object>\n  },\n  VariableEnvironment: {\n    EnvironmentRecord: {\n      Type: \"Object\",\n      // Identifier bindings go here\n      c: undefined,\n    }\n    outer: <null>,\n    ThisBinding: <Global Object>\n  }\n}\n```\n\n在执行阶段，变量赋值已经完成。因此，在执行阶段，全局执行上下文将如下所示。\n\n```javascript\nGlobalExectionContext = {\nLexicalEnvironment: {\n    EnvironmentRecord: {\n      Type: \"Object\",\n      // Identifier bindings go here\n      a: 20,\n      b: 30,\n      multiply: < func >\n    }\n    outer: <null>,\n    ThisBinding: <Global Object>\n  },\nVariableEnvironment: {\n    EnvironmentRecord: {\n      Type: \"Object\",\n      // Identifier bindings go here\n      c: undefined,\n    }\n    outer: <null>,\n    ThisBinding: <Global Object>\n  }\n}\n```\n\n当调用函数 multiply(20, 30) 时，会创建一个新的函数执行上下文来执行函数代码。因此，在创建阶段，函数执行上下文将如下所示：\n\n```javascript\nFunctionExectionContext = {\nLexicalEnvironment: {\n    EnvironmentRecord: {\n      Type: \"Declarative\",\n      // Identifier bindings go here\n      Arguments: {0: 20, 1: 30, length: 2},\n    },\n    outer: <GlobalLexicalEnvironment>,\n    ThisBinding: <Global Object or undefined>,\n  },\nVariableEnvironment: {\n    EnvironmentRecord: {\n      Type: \"Declarative\",\n      // Identifier bindings go here\n      g: undefined\n    },\n    outer: <GlobalLexicalEnvironment>,\n    ThisBinding: <Global Object or undefined>\n  }\n}\n```\n\n在此之后，执行上下文将进入执行阶段，即完成对函数内部变量的赋值。因此，在执行阶段，函数的执行上下文将如下所示：\n\n```javascript\nFunctionExectionContext = {\nLexicalEnvironment: {\n    EnvironmentRecord: {\n      Type: \"Declarative\",\n      // Identifier bindings go here\n      Arguments: {0: 20, 1: 30, length: 2},\n    },\n    outer: <GlobalLexicalEnvironment>,\n    ThisBinding: <Global Object or undefined>,\n  },\nVariableEnvironment: {\n    EnvironmentRecord: {\n      Type: \"Declarative\",\n      // Identifier bindings go here\n      g: 20\n    },\n    outer: <GlobalLexicalEnvironment>,\n    ThisBinding: <Global Object or undefined>\n  }\n}\n```\n\n函数完成后，返回值将存储在 c 中。之后，全局代码完成，程序结束。\n\n注--你可能已经注意到，在创建阶段，let 和 const 定义的变量没有任何相关值，但 var 定义的变量被设置为未定义。\n这是因为在创建阶段，代码会扫描变量和函数声明，而函数声明会完整地存储在环境中，变量最初会被设置为未定义（var 的情况）或保持未初始化（let 和 const 的情况）。\n这就是为什么你可以在声明 var 定义变量之前访问它们（尽管它们未定义），但在声明 let 和 const 变量之前访问它们时会出现引用错误的原因。\n这就是我们所说的挂起。\n注意：在执行阶段，如果 JavaScript 引擎无法在源代码中声明 let 变量的实际位置找到它的值，就会将其赋值为 undefined。\n\n\n# 执行上下文的特点\n\n1. 单线程\n2. 同步执行\n3. 全局唯一\n4. 函数每调用一次生成一个新的执行上下文环境","source":"_posts/执行上下文.md","raw":"---\ntitle: 执行上下文\ntags:\n  - JavaScript\ntop: true\ncover: false\ntoc: true\nmathjax: true\ncategories:\n  - JavaScript\ndate: 2023-08-02 18:34:07\npassword:\nsummary:\n  - JavaScript的执行上下文相关知识\n---\n\n{% blockquote  Sukhjinder Arora https://blog.bitsrc.io/understanding-execution-context-and-execution-stack-in-javascript-1c9ea8642dd0 Understanding Execution Context and Execution Stack in Javascript %}\n本文大部份内容引用翻译自Sukhjinder Arora的“了解 Javascript 中的执行上下文和执行堆栈”一文\n{% endblockquote %}\n\n\n# 什么是执行上下文\n\n执行上下文：抽象概念，评估和执行js代码的环境。当前执行环境的变量、函数声明、作用链域、this等信息\n\n# 执行上下文分类\n\n1. **全局执行上下文**   这是默认或者说基础的上下文，任何不在函数内部的代码都在全局上下文中。它会执行两件事：创建一个全局的 window 对象（浏览器的情况下），并且设置 `this` 的值等于这个全局对象。一个程序中只会有一个全局执行上下文。\n2. **函数执行上下文** — 每当一个函数被调用时, 都会为该函数创建一个新的上下文。每个函数都有它自己的执行上下文，不过是在函数被调用时创建的。函数上下文可以有任意多个。每当一个新的执行上下文被创建，它会按定义的顺序（将在后文讨论）执行一系列步骤。\n3. **Eval 函数执行上下文** — 执行在 `eval` 函数内部的代码也会有它属于自己的执行上下文，但由于 JavaScript 开发者并不经常使用 `eval`，所以在这里我不会讨论它。\n\n# 执行栈\n\n- js引擎第一次遇见js脚本，创建全局上下文，压栈；\n- 遇到函数调用，创建函数上下文，压栈；\n- 执行函数调用，出栈；\n- 所有代码执行完毕，js引擎从当前栈移除全局上下文\n\n```javascript\nlet a = 'Hello World!';\n\nfunction first() {\n  console.log('Inside first function');\n  second();\n  console.log('Again inside first function');\n}\n\nfunction second() {\n  console.log('Inside second function');\n}\n\nfirst();\nconsole.log('Inside Global Execution Context');\n```\n![执行栈图解](执行栈.jpg)\n\n# 执行上下文的生命周期\n\n## 创建阶段\n\n执行上下文在创建阶段做两件事情：\n创建词法环境组件（LexicalEnvironment）\n创建变量环境组件（VariableEnvironment）\n\n```javascript\nExecutionContext = {\n  LexicalEnvironment = <ref. to LexicalEnvironment in memory>,\n  VariableEnvironment = <ref. to VariableEnvironment in  memory>,\n}\n```\n\n### 词法环境（LexicalEnvironment）\n\n一种持有**标识符—变量映射**的结构。\n\n- **标识符**指的是变量/函数的名字\n- **变量**是对实际对象(包含函数类型对象)或原始数据的引用\n\n```javascript\nvar a = 20;\nvar b = 40;\nfunction foo() {\n  console.log('bar');\n}\n```\n\n上述代码的词法环境结构如下：\n\n```javascript\nlexicalEnvironment = {\n  a: 20,\n  b: 40,\n  foo: <ref. to foo function>\n}\n```\n\n### **词法环境的组成部分**：环境记录器、外部环境的引用、this绑定\n![词法环境的组成部分](词法环境的组成部分.jpg)\n\n#### **环境记录器**：环境记录是词法环境中存储变量和函数声明的地方\n![环境记录器的组成部分](环境记录器.jpg)\n\n{% blockquote %}\n对于函数代码而言，环境记录还包含一个参数对象，该对象包含传递给函数的索引和参数之间的映射，以及传递给函数的参数长度（个数)。例如，下面函数的参数对象如下所示：\n{% endblockquote %}\n\n```javascript\nfunction foo(a, b) {\n  var c = a + b;\n}\nfoo(2, 3);\n// argument object\nArguments: {0: 2, 1: 3, length: 2},\n```\n\n\n#### **外部环境的引用：**\n\n对外部环境的引用意味着它可以访问外部词法环境。\n也就是说，如果当前词法环境中没有变量，JavaScript 引擎可以在外部环境中查找这些变量。\n\n#### **this绑定：**\n\n在该组成部分中，this 的值被确定或设置。\n\n1. 在全局执行上下文中，this 的值指的是全局对象。(在浏览器中，它指的是窗口对象）。\n2. 在函数执行上下文中，this 的值取决于函数的调用方式。如果函数是通过对象引用调用的，则 this 的值将设置为该对象；否则，this 的值将设置为全局对象或未定义（在严格模式下）\n\n```javascript\nconst person = {\n  name: 'peter',\n  birthYear: 1994,\n  calcAge: function() {\n    console.log(2018 - this.birthYear);\n  }\n}\nperson.calcAge(); \n// 'this' refers to 'person', because 'calcAge' was called with //'person' object reference\nconst calculateAge = person.calcAge;\ncalculateAge();\n// 'this' refers to the global window object, because no object reference was given\n```\n\n抽象地说，词法环境在伪代码中是这样的：\n\n```javascript\nGlobalExectionContext = {\n  LexicalEnvironment: {\n    EnvironmentRecord: {\n      Type: \"Object\",\n      // Identifier bindings go here\n    }\n    outer: <null>,\n    this: <global object>\n  }\n}\nFunctionExectionContext = {\n  LexicalEnvironment: {\n    EnvironmentRecord: {\n      Type: \"Declarative\",\n      // Identifier bindings go here\n    }\n    outer: <Global or outer function environment reference>,\n    this: <depends on how function is called>\n  }\n}\n```\n\n### 可变环境\n\n它也是一个词法环境，其 EnvironmentRecord 保存着 VariableStatements 在此执行上下文中创建的绑定。\n**如上文所述，变量环境也是词法环境，因此它具有上文定义的词法环境的所有属性和组件。**\n在 ES6 中，**LexicalEnvironment 组件与 VariableEnvironment 组件的区别在于，前者用于存储函数声明和变量（let 和 const）绑定，而后者仅用于存储变量（var）绑定。**\n\n## 执行阶段\n\n在此阶段，完成对所有这些变量的分配，最后执行代码。\n\n```javascript\nlet a = 20;\nconst b = 30;\nvar c;\nfunction multiply(e, f) {\n var g = 20;\n return e * f * g;\n}\nc = multiply(20, 30);\n```\n\n执行上述代码时，JavaScript 引擎会创建一个全局执行上下文来执行全局代码。因此，在创建阶段，全局执行上下文将是这样的：\n\n```javascript\nGlobalExectionContext = {\n  LexicalEnvironment: {\n    EnvironmentRecord: {\n      Type: \"Object\",\n      // Identifier bindings go here\n      a: < uninitialized >,\n      b: < uninitialized >,\n      multiply: < func >\n    }\n    outer: <null>,\n    ThisBinding: <Global Object>\n  },\n  VariableEnvironment: {\n    EnvironmentRecord: {\n      Type: \"Object\",\n      // Identifier bindings go here\n      c: undefined,\n    }\n    outer: <null>,\n    ThisBinding: <Global Object>\n  }\n}\n```\n\n在执行阶段，变量赋值已经完成。因此，在执行阶段，全局执行上下文将如下所示。\n\n```javascript\nGlobalExectionContext = {\nLexicalEnvironment: {\n    EnvironmentRecord: {\n      Type: \"Object\",\n      // Identifier bindings go here\n      a: 20,\n      b: 30,\n      multiply: < func >\n    }\n    outer: <null>,\n    ThisBinding: <Global Object>\n  },\nVariableEnvironment: {\n    EnvironmentRecord: {\n      Type: \"Object\",\n      // Identifier bindings go here\n      c: undefined,\n    }\n    outer: <null>,\n    ThisBinding: <Global Object>\n  }\n}\n```\n\n当调用函数 multiply(20, 30) 时，会创建一个新的函数执行上下文来执行函数代码。因此，在创建阶段，函数执行上下文将如下所示：\n\n```javascript\nFunctionExectionContext = {\nLexicalEnvironment: {\n    EnvironmentRecord: {\n      Type: \"Declarative\",\n      // Identifier bindings go here\n      Arguments: {0: 20, 1: 30, length: 2},\n    },\n    outer: <GlobalLexicalEnvironment>,\n    ThisBinding: <Global Object or undefined>,\n  },\nVariableEnvironment: {\n    EnvironmentRecord: {\n      Type: \"Declarative\",\n      // Identifier bindings go here\n      g: undefined\n    },\n    outer: <GlobalLexicalEnvironment>,\n    ThisBinding: <Global Object or undefined>\n  }\n}\n```\n\n在此之后，执行上下文将进入执行阶段，即完成对函数内部变量的赋值。因此，在执行阶段，函数的执行上下文将如下所示：\n\n```javascript\nFunctionExectionContext = {\nLexicalEnvironment: {\n    EnvironmentRecord: {\n      Type: \"Declarative\",\n      // Identifier bindings go here\n      Arguments: {0: 20, 1: 30, length: 2},\n    },\n    outer: <GlobalLexicalEnvironment>,\n    ThisBinding: <Global Object or undefined>,\n  },\nVariableEnvironment: {\n    EnvironmentRecord: {\n      Type: \"Declarative\",\n      // Identifier bindings go here\n      g: 20\n    },\n    outer: <GlobalLexicalEnvironment>,\n    ThisBinding: <Global Object or undefined>\n  }\n}\n```\n\n函数完成后，返回值将存储在 c 中。之后，全局代码完成，程序结束。\n\n注--你可能已经注意到，在创建阶段，let 和 const 定义的变量没有任何相关值，但 var 定义的变量被设置为未定义。\n这是因为在创建阶段，代码会扫描变量和函数声明，而函数声明会完整地存储在环境中，变量最初会被设置为未定义（var 的情况）或保持未初始化（let 和 const 的情况）。\n这就是为什么你可以在声明 var 定义变量之前访问它们（尽管它们未定义），但在声明 let 和 const 变量之前访问它们时会出现引用错误的原因。\n这就是我们所说的挂起。\n注意：在执行阶段，如果 JavaScript 引擎无法在源代码中声明 let 变量的实际位置找到它的值，就会将其赋值为 undefined。\n\n\n# 执行上下文的特点\n\n1. 单线程\n2. 同步执行\n3. 全局唯一\n4. 函数每调用一次生成一个新的执行上下文环境","slug":"执行上下文","published":1,"updated":"2023-08-03T03:16:43.041Z","_id":"clktldo5q0000r4uugp57b3ix","comments":1,"layout":"post","photos":[],"link":"","content":"<blockquote><p>本文大部份内容引用翻译自Sukhjinder Arora的“了解 Javascript 中的执行上下文和执行堆栈”一文</p>\n<footer><strong>Sukhjinder Arora</strong><cite><a href=\"https://blog.bitsrc.io/understanding-execution-context-and-execution-stack-in-javascript-1c9ea8642dd0\">Understanding Execution Context and Execution Stack in Javascript</a></cite></footer></blockquote>\n\n\n<h1 id=\"什么是执行上下文\"><a href=\"#什么是执行上下文\" class=\"headerlink\" title=\"什么是执行上下文\"></a>什么是执行上下文</h1><p>执行上下文：抽象概念，评估和执行js代码的环境。当前执行环境的变量、函数声明、作用链域、this等信息</p>\n<h1 id=\"执行上下文分类\"><a href=\"#执行上下文分类\" class=\"headerlink\" title=\"执行上下文分类\"></a>执行上下文分类</h1><ol>\n<li><strong>全局执行上下文</strong>   这是默认或者说基础的上下文，任何不在函数内部的代码都在全局上下文中。它会执行两件事：创建一个全局的 window 对象（浏览器的情况下），并且设置 <code>this</code> 的值等于这个全局对象。一个程序中只会有一个全局执行上下文。</li>\n<li><strong>函数执行上下文</strong> — 每当一个函数被调用时, 都会为该函数创建一个新的上下文。每个函数都有它自己的执行上下文，不过是在函数被调用时创建的。函数上下文可以有任意多个。每当一个新的执行上下文被创建，它会按定义的顺序（将在后文讨论）执行一系列步骤。</li>\n<li><strong>Eval 函数执行上下文</strong> — 执行在 <code>eval</code> 函数内部的代码也会有它属于自己的执行上下文，但由于 JavaScript 开发者并不经常使用 <code>eval</code>，所以在这里我不会讨论它。</li>\n</ol>\n<h1 id=\"执行栈\"><a href=\"#执行栈\" class=\"headerlink\" title=\"执行栈\"></a>执行栈</h1><ul>\n<li>js引擎第一次遇见js脚本，创建全局上下文，压栈；</li>\n<li>遇到函数调用，创建函数上下文，压栈；</li>\n<li>执行函数调用，出栈；</li>\n<li>所有代码执行完毕，js引擎从当前栈移除全局上下文</li>\n</ul>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> a <span class=\"token operator\">=</span> <span class=\"token string\">'Hello World!'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">first</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Inside first function'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">second</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Again inside first function'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">second</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Inside second function'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token function\">first</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Inside Global Execution Context'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"/2023/08/02/%E6%89%A7%E8%A1%8C%E4%B8%8A%E4%B8%8B%E6%96%87/%E6%89%A7%E8%A1%8C%E6%A0%88.jpg\" alt=\"执行栈图解\"></p>\n<h1 id=\"执行上下文的生命周期\"><a href=\"#执行上下文的生命周期\" class=\"headerlink\" title=\"执行上下文的生命周期\"></a>执行上下文的生命周期</h1><h2 id=\"创建阶段\"><a href=\"#创建阶段\" class=\"headerlink\" title=\"创建阶段\"></a>创建阶段</h2><p>执行上下文在创建阶段做两件事情：<br>创建词法环境组件（LexicalEnvironment）<br>创建变量环境组件（VariableEnvironment）</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">ExecutionContext <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n  LexicalEnvironment <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;</span>ref<span class=\"token punctuation\">.</span> to LexicalEnvironment <span class=\"token keyword\">in</span> memory<span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n  VariableEnvironment <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;</span>ref<span class=\"token punctuation\">.</span> to VariableEnvironment <span class=\"token keyword\">in</span>  memory<span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"词法环境（LexicalEnvironment）\"><a href=\"#词法环境（LexicalEnvironment）\" class=\"headerlink\" title=\"词法环境（LexicalEnvironment）\"></a>词法环境（LexicalEnvironment）</h3><p>一种持有<strong>标识符—变量映射</strong>的结构。</p>\n<ul>\n<li><strong>标识符</strong>指的是变量&#x2F;函数的名字</li>\n<li><strong>变量</strong>是对实际对象(包含函数类型对象)或原始数据的引用</li>\n</ul>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> <span class=\"token number\">40</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'bar'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>上述代码的词法环境结构如下：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">lexicalEnvironment <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">a</span><span class=\"token operator\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">b</span><span class=\"token operator\">:</span> <span class=\"token number\">40</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">foo</span><span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span>ref<span class=\"token punctuation\">.</span> to foo <span class=\"token keyword\">function</span><span class=\"token operator\">></span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"词法环境的组成部分：环境记录器、外部环境的引用、this绑定\"><a href=\"#词法环境的组成部分：环境记录器、外部环境的引用、this绑定\" class=\"headerlink\" title=\"词法环境的组成部分：环境记录器、外部环境的引用、this绑定\"></a><strong>词法环境的组成部分</strong>：环境记录器、外部环境的引用、this绑定</h3><p><img src=\"/2023/08/02/%E6%89%A7%E8%A1%8C%E4%B8%8A%E4%B8%8B%E6%96%87/%E8%AF%8D%E6%B3%95%E7%8E%AF%E5%A2%83%E7%9A%84%E7%BB%84%E6%88%90%E9%83%A8%E5%88%86.jpg\" alt=\"词法环境的组成部分\"></p>\n<h4 id=\"环境记录器：环境记录是词法环境中存储变量和函数声明的地方\"><a href=\"#环境记录器：环境记录是词法环境中存储变量和函数声明的地方\" class=\"headerlink\" title=\"环境记录器：环境记录是词法环境中存储变量和函数声明的地方\"></a><strong>环境记录器</strong>：环境记录是词法环境中存储变量和函数声明的地方</h4><p><img src=\"/2023/08/02/%E6%89%A7%E8%A1%8C%E4%B8%8A%E4%B8%8B%E6%96%87/%E7%8E%AF%E5%A2%83%E8%AE%B0%E5%BD%95%E5%99%A8.jpg\" alt=\"环境记录器的组成部分\"></p>\n<blockquote><p>对于函数代码而言，环境记录还包含一个参数对象，该对象包含传递给函数的索引和参数之间的映射，以及传递给函数的参数长度（个数)。例如，下面函数的参数对象如下所示：</p>\n</blockquote>\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">var</span> c <span class=\"token operator\">=</span> a <span class=\"token operator\">+</span> b<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// argument object</span>\n<span class=\"token literal-property property\">Arguments</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">0</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">length</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n<h4 id=\"外部环境的引用：\"><a href=\"#外部环境的引用：\" class=\"headerlink\" title=\"外部环境的引用：\"></a><strong>外部环境的引用：</strong></h4><p>对外部环境的引用意味着它可以访问外部词法环境。<br>也就是说，如果当前词法环境中没有变量，JavaScript 引擎可以在外部环境中查找这些变量。</p>\n<h4 id=\"this绑定：\"><a href=\"#this绑定：\" class=\"headerlink\" title=\"this绑定：\"></a><strong>this绑定：</strong></h4><p>在该组成部分中，this 的值被确定或设置。</p>\n<ol>\n<li>在全局执行上下文中，this 的值指的是全局对象。(在浏览器中，它指的是窗口对象）。</li>\n<li>在函数执行上下文中，this 的值取决于函数的调用方式。如果函数是通过对象引用调用的，则 this 的值将设置为该对象；否则，this 的值将设置为全局对象或未定义（在严格模式下）</li>\n</ol>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> person <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'peter'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">birthYear</span><span class=\"token operator\">:</span> <span class=\"token number\">1994</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">calcAge</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">2018</span> <span class=\"token operator\">-</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>birthYear<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\nperson<span class=\"token punctuation\">.</span><span class=\"token function\">calcAge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token comment\">// 'this' refers to 'person', because 'calcAge' was called with //'person' object reference</span>\n<span class=\"token keyword\">const</span> calculateAge <span class=\"token operator\">=</span> person<span class=\"token punctuation\">.</span>calcAge<span class=\"token punctuation\">;</span>\n<span class=\"token function\">calculateAge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 'this' refers to the global window object, because no object reference was given</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>抽象地说，词法环境在伪代码中是这样的：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">GlobalExectionContext <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">LexicalEnvironment</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">EnvironmentRecord</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">Type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Object\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">// Identifier bindings go here</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token literal-property property\">outer</span><span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span><span class=\"token keyword\">null</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">this</span><span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span>global object<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\nFunctionExectionContext <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">LexicalEnvironment</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">EnvironmentRecord</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">Type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Declarative\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">// Identifier bindings go here</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token literal-property property\">outer</span><span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span>Global or outer <span class=\"token keyword\">function</span> environment reference<span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">this</span><span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span>depends on how <span class=\"token keyword\">function</span> is called<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"可变环境\"><a href=\"#可变环境\" class=\"headerlink\" title=\"可变环境\"></a>可变环境</h3><p>它也是一个词法环境，其 EnvironmentRecord 保存着 VariableStatements 在此执行上下文中创建的绑定。<br><strong>如上文所述，变量环境也是词法环境，因此它具有上文定义的词法环境的所有属性和组件。</strong><br>在 ES6 中，<strong>LexicalEnvironment 组件与 VariableEnvironment 组件的区别在于，前者用于存储函数声明和变量（let 和 const）绑定，而后者仅用于存储变量（var）绑定。</strong></p>\n<h2 id=\"执行阶段\"><a href=\"#执行阶段\" class=\"headerlink\" title=\"执行阶段\"></a>执行阶段</h2><p>在此阶段，完成对所有这些变量的分配，最后执行代码。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> a <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> b <span class=\"token operator\">=</span> <span class=\"token number\">30</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> c<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">multiply</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> f</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n <span class=\"token keyword\">var</span> g <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span>\n <span class=\"token keyword\">return</span> e <span class=\"token operator\">*</span> f <span class=\"token operator\">*</span> g<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\nc <span class=\"token operator\">=</span> <span class=\"token function\">multiply</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>执行上述代码时，JavaScript 引擎会创建一个全局执行上下文来执行全局代码。因此，在创建阶段，全局执行上下文将是这样的：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">GlobalExectionContext <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">LexicalEnvironment</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">EnvironmentRecord</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">Type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Object\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">// Identifier bindings go here</span>\n      <span class=\"token literal-property property\">a</span><span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span> uninitialized <span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">b</span><span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span> uninitialized <span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">multiply</span><span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span> func <span class=\"token operator\">></span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token literal-property property\">outer</span><span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span><span class=\"token keyword\">null</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">ThisBinding</span><span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span>Global Object<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">VariableEnvironment</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">EnvironmentRecord</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">Type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Object\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">// Identifier bindings go here</span>\n      <span class=\"token literal-property property\">c</span><span class=\"token operator\">:</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token literal-property property\">outer</span><span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span><span class=\"token keyword\">null</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">ThisBinding</span><span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span>Global Object<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>在执行阶段，变量赋值已经完成。因此，在执行阶段，全局执行上下文将如下所示。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">GlobalExectionContext <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n<span class=\"token literal-property property\">LexicalEnvironment</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">EnvironmentRecord</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">Type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Object\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">// Identifier bindings go here</span>\n      <span class=\"token literal-property property\">a</span><span class=\"token operator\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">b</span><span class=\"token operator\">:</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">multiply</span><span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span> func <span class=\"token operator\">></span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token literal-property property\">outer</span><span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span><span class=\"token keyword\">null</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">ThisBinding</span><span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span>Global Object<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n<span class=\"token literal-property property\">VariableEnvironment</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">EnvironmentRecord</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">Type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Object\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">// Identifier bindings go here</span>\n      <span class=\"token literal-property property\">c</span><span class=\"token operator\">:</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token literal-property property\">outer</span><span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span><span class=\"token keyword\">null</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">ThisBinding</span><span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span>Global Object<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>当调用函数 multiply(20, 30) 时，会创建一个新的函数执行上下文来执行函数代码。因此，在创建阶段，函数执行上下文将如下所示：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">FunctionExectionContext <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n<span class=\"token literal-property property\">LexicalEnvironment</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">EnvironmentRecord</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">Type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Declarative\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">// Identifier bindings go here</span>\n      <span class=\"token literal-property property\">Arguments</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">0</span><span class=\"token operator\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">length</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">outer</span><span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span>GlobalLexicalEnvironment<span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">ThisBinding</span><span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span>Global Object or <span class=\"token keyword\">undefined</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n<span class=\"token literal-property property\">VariableEnvironment</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">EnvironmentRecord</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">Type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Declarative\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">// Identifier bindings go here</span>\n      <span class=\"token literal-property property\">g</span><span class=\"token operator\">:</span> <span class=\"token keyword\">undefined</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">outer</span><span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span>GlobalLexicalEnvironment<span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">ThisBinding</span><span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span>Global Object or <span class=\"token keyword\">undefined</span><span class=\"token operator\">></span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>在此之后，执行上下文将进入执行阶段，即完成对函数内部变量的赋值。因此，在执行阶段，函数的执行上下文将如下所示：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">FunctionExectionContext <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n<span class=\"token literal-property property\">LexicalEnvironment</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">EnvironmentRecord</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">Type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Declarative\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">// Identifier bindings go here</span>\n      <span class=\"token literal-property property\">Arguments</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">0</span><span class=\"token operator\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">length</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">outer</span><span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span>GlobalLexicalEnvironment<span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">ThisBinding</span><span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span>Global Object or <span class=\"token keyword\">undefined</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n<span class=\"token literal-property property\">VariableEnvironment</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">EnvironmentRecord</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">Type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Declarative\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">// Identifier bindings go here</span>\n      <span class=\"token literal-property property\">g</span><span class=\"token operator\">:</span> <span class=\"token number\">20</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">outer</span><span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span>GlobalLexicalEnvironment<span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">ThisBinding</span><span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span>Global Object or <span class=\"token keyword\">undefined</span><span class=\"token operator\">></span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>函数完成后，返回值将存储在 c 中。之后，全局代码完成，程序结束。</p>\n<p>注–你可能已经注意到，在创建阶段，let 和 const 定义的变量没有任何相关值，但 var 定义的变量被设置为未定义。<br>这是因为在创建阶段，代码会扫描变量和函数声明，而函数声明会完整地存储在环境中，变量最初会被设置为未定义（var 的情况）或保持未初始化（let 和 const 的情况）。<br>这就是为什么你可以在声明 var 定义变量之前访问它们（尽管它们未定义），但在声明 let 和 const 变量之前访问它们时会出现引用错误的原因。<br>这就是我们所说的挂起。<br>注意：在执行阶段，如果 JavaScript 引擎无法在源代码中声明 let 变量的实际位置找到它的值，就会将其赋值为 undefined。</p>\n<h1 id=\"执行上下文的特点\"><a href=\"#执行上下文的特点\" class=\"headerlink\" title=\"执行上下文的特点\"></a>执行上下文的特点</h1><ol>\n<li>单线程</li>\n<li>同步执行</li>\n<li>全局唯一</li>\n<li>函数每调用一次生成一个新的执行上下文环境</li>\n</ol>\n","site":{"data":{"friends":[{"avatar":"https://static.nowcoder.com/fe/file/logo/1.png","name":"牛客网","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"https://www.nowcoder.com/","title":"前去学习"},{"avatar":"http://resource.muyiy.cn/image/javascript.gif","name":"木易杨前端进阶","introduction":"https://muyiy.cn/","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"https://lf1-cdn2-tos.bytegoofy.com/bydesign/iconparksite/static/media/logo_with_name.598fc011.svg","name":"Icon Park","url":"https://iconpark.oceanengine.com/home","title":"前去学习"},{"avatar":"https://static.nowcoder.com/fe/file/logo/1.png","name":"牛客网","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"https://www.nowcoder.com/","title":"前去学习"},{"avatar":"http://resource.muyiy.cn/image/javascript.gif","name":"木易杨前端进阶","introduction":"https://muyiy.cn/","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"https://lf1-cdn2-tos.bytegoofy.com/bydesign/iconparksite/static/media/logo_with_name.598fc011.svg","name":"Icon Park","url":"https://iconpark.oceanengine.com/home","title":"前去学习"},{"avatar":"https://static.nowcoder.com/fe/file/logo/1.png","name":"牛客网","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"https://www.nowcoder.com/","title":"前去学习"},{"avatar":"http://resource.muyiy.cn/image/javascript.gif","name":"木易杨前端进阶","introduction":"https://muyiy.cn/","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"https://lf1-cdn2-tos.bytegoofy.com/bydesign/iconparksite/static/media/logo_with_name.598fc011.svg","name":"Icon Park","url":"https://iconpark.oceanengine.com/home","title":"前去学习"}]}},"excerpt":"","more":"<blockquote><p>本文大部份内容引用翻译自Sukhjinder Arora的“了解 Javascript 中的执行上下文和执行堆栈”一文</p>\n<footer><strong>Sukhjinder Arora</strong><cite><a href=\"https://blog.bitsrc.io/understanding-execution-context-and-execution-stack-in-javascript-1c9ea8642dd0\">Understanding Execution Context and Execution Stack in Javascript</a></cite></footer></blockquote>\n\n\n<h1 id=\"什么是执行上下文\"><a href=\"#什么是执行上下文\" class=\"headerlink\" title=\"什么是执行上下文\"></a>什么是执行上下文</h1><p>执行上下文：抽象概念，评估和执行js代码的环境。当前执行环境的变量、函数声明、作用链域、this等信息</p>\n<h1 id=\"执行上下文分类\"><a href=\"#执行上下文分类\" class=\"headerlink\" title=\"执行上下文分类\"></a>执行上下文分类</h1><ol>\n<li><strong>全局执行上下文</strong>   这是默认或者说基础的上下文，任何不在函数内部的代码都在全局上下文中。它会执行两件事：创建一个全局的 window 对象（浏览器的情况下），并且设置 <code>this</code> 的值等于这个全局对象。一个程序中只会有一个全局执行上下文。</li>\n<li><strong>函数执行上下文</strong> — 每当一个函数被调用时, 都会为该函数创建一个新的上下文。每个函数都有它自己的执行上下文，不过是在函数被调用时创建的。函数上下文可以有任意多个。每当一个新的执行上下文被创建，它会按定义的顺序（将在后文讨论）执行一系列步骤。</li>\n<li><strong>Eval 函数执行上下文</strong> — 执行在 <code>eval</code> 函数内部的代码也会有它属于自己的执行上下文，但由于 JavaScript 开发者并不经常使用 <code>eval</code>，所以在这里我不会讨论它。</li>\n</ol>\n<h1 id=\"执行栈\"><a href=\"#执行栈\" class=\"headerlink\" title=\"执行栈\"></a>执行栈</h1><ul>\n<li>js引擎第一次遇见js脚本，创建全局上下文，压栈；</li>\n<li>遇到函数调用，创建函数上下文，压栈；</li>\n<li>执行函数调用，出栈；</li>\n<li>所有代码执行完毕，js引擎从当前栈移除全局上下文</li>\n</ul>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> a <span class=\"token operator\">=</span> <span class=\"token string\">'Hello World!'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">first</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Inside first function'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">second</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Again inside first function'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">second</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Inside second function'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token function\">first</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Inside Global Execution Context'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"/2023/08/02/%E6%89%A7%E8%A1%8C%E4%B8%8A%E4%B8%8B%E6%96%87/%E6%89%A7%E8%A1%8C%E6%A0%88.jpg\" alt=\"执行栈图解\"></p>\n<h1 id=\"执行上下文的生命周期\"><a href=\"#执行上下文的生命周期\" class=\"headerlink\" title=\"执行上下文的生命周期\"></a>执行上下文的生命周期</h1><h2 id=\"创建阶段\"><a href=\"#创建阶段\" class=\"headerlink\" title=\"创建阶段\"></a>创建阶段</h2><p>执行上下文在创建阶段做两件事情：<br>创建词法环境组件（LexicalEnvironment）<br>创建变量环境组件（VariableEnvironment）</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">ExecutionContext <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n  LexicalEnvironment <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;</span>ref<span class=\"token punctuation\">.</span> to LexicalEnvironment <span class=\"token keyword\">in</span> memory<span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n  VariableEnvironment <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;</span>ref<span class=\"token punctuation\">.</span> to VariableEnvironment <span class=\"token keyword\">in</span>  memory<span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"词法环境（LexicalEnvironment）\"><a href=\"#词法环境（LexicalEnvironment）\" class=\"headerlink\" title=\"词法环境（LexicalEnvironment）\"></a>词法环境（LexicalEnvironment）</h3><p>一种持有<strong>标识符—变量映射</strong>的结构。</p>\n<ul>\n<li><strong>标识符</strong>指的是变量&#x2F;函数的名字</li>\n<li><strong>变量</strong>是对实际对象(包含函数类型对象)或原始数据的引用</li>\n</ul>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> <span class=\"token number\">40</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'bar'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>上述代码的词法环境结构如下：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">lexicalEnvironment <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">a</span><span class=\"token operator\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">b</span><span class=\"token operator\">:</span> <span class=\"token number\">40</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">foo</span><span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span>ref<span class=\"token punctuation\">.</span> to foo <span class=\"token keyword\">function</span><span class=\"token operator\">></span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"词法环境的组成部分：环境记录器、外部环境的引用、this绑定\"><a href=\"#词法环境的组成部分：环境记录器、外部环境的引用、this绑定\" class=\"headerlink\" title=\"词法环境的组成部分：环境记录器、外部环境的引用、this绑定\"></a><strong>词法环境的组成部分</strong>：环境记录器、外部环境的引用、this绑定</h3><p><img src=\"/2023/08/02/%E6%89%A7%E8%A1%8C%E4%B8%8A%E4%B8%8B%E6%96%87/%E8%AF%8D%E6%B3%95%E7%8E%AF%E5%A2%83%E7%9A%84%E7%BB%84%E6%88%90%E9%83%A8%E5%88%86.jpg\" alt=\"词法环境的组成部分\"></p>\n<h4 id=\"环境记录器：环境记录是词法环境中存储变量和函数声明的地方\"><a href=\"#环境记录器：环境记录是词法环境中存储变量和函数声明的地方\" class=\"headerlink\" title=\"环境记录器：环境记录是词法环境中存储变量和函数声明的地方\"></a><strong>环境记录器</strong>：环境记录是词法环境中存储变量和函数声明的地方</h4><p><img src=\"/2023/08/02/%E6%89%A7%E8%A1%8C%E4%B8%8A%E4%B8%8B%E6%96%87/%E7%8E%AF%E5%A2%83%E8%AE%B0%E5%BD%95%E5%99%A8.jpg\" alt=\"环境记录器的组成部分\"></p>\n<blockquote><p>对于函数代码而言，环境记录还包含一个参数对象，该对象包含传递给函数的索引和参数之间的映射，以及传递给函数的参数长度（个数)。例如，下面函数的参数对象如下所示：</p>\n</blockquote>\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">var</span> c <span class=\"token operator\">=</span> a <span class=\"token operator\">+</span> b<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// argument object</span>\n<span class=\"token literal-property property\">Arguments</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">0</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">length</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n<h4 id=\"外部环境的引用：\"><a href=\"#外部环境的引用：\" class=\"headerlink\" title=\"外部环境的引用：\"></a><strong>外部环境的引用：</strong></h4><p>对外部环境的引用意味着它可以访问外部词法环境。<br>也就是说，如果当前词法环境中没有变量，JavaScript 引擎可以在外部环境中查找这些变量。</p>\n<h4 id=\"this绑定：\"><a href=\"#this绑定：\" class=\"headerlink\" title=\"this绑定：\"></a><strong>this绑定：</strong></h4><p>在该组成部分中，this 的值被确定或设置。</p>\n<ol>\n<li>在全局执行上下文中，this 的值指的是全局对象。(在浏览器中，它指的是窗口对象）。</li>\n<li>在函数执行上下文中，this 的值取决于函数的调用方式。如果函数是通过对象引用调用的，则 this 的值将设置为该对象；否则，this 的值将设置为全局对象或未定义（在严格模式下）</li>\n</ol>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> person <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'peter'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">birthYear</span><span class=\"token operator\">:</span> <span class=\"token number\">1994</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">calcAge</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">2018</span> <span class=\"token operator\">-</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>birthYear<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\nperson<span class=\"token punctuation\">.</span><span class=\"token function\">calcAge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token comment\">// 'this' refers to 'person', because 'calcAge' was called with //'person' object reference</span>\n<span class=\"token keyword\">const</span> calculateAge <span class=\"token operator\">=</span> person<span class=\"token punctuation\">.</span>calcAge<span class=\"token punctuation\">;</span>\n<span class=\"token function\">calculateAge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 'this' refers to the global window object, because no object reference was given</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>抽象地说，词法环境在伪代码中是这样的：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">GlobalExectionContext <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">LexicalEnvironment</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">EnvironmentRecord</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">Type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Object\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">// Identifier bindings go here</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token literal-property property\">outer</span><span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span><span class=\"token keyword\">null</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">this</span><span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span>global object<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\nFunctionExectionContext <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">LexicalEnvironment</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">EnvironmentRecord</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">Type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Declarative\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">// Identifier bindings go here</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token literal-property property\">outer</span><span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span>Global or outer <span class=\"token keyword\">function</span> environment reference<span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">this</span><span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span>depends on how <span class=\"token keyword\">function</span> is called<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"可变环境\"><a href=\"#可变环境\" class=\"headerlink\" title=\"可变环境\"></a>可变环境</h3><p>它也是一个词法环境，其 EnvironmentRecord 保存着 VariableStatements 在此执行上下文中创建的绑定。<br><strong>如上文所述，变量环境也是词法环境，因此它具有上文定义的词法环境的所有属性和组件。</strong><br>在 ES6 中，<strong>LexicalEnvironment 组件与 VariableEnvironment 组件的区别在于，前者用于存储函数声明和变量（let 和 const）绑定，而后者仅用于存储变量（var）绑定。</strong></p>\n<h2 id=\"执行阶段\"><a href=\"#执行阶段\" class=\"headerlink\" title=\"执行阶段\"></a>执行阶段</h2><p>在此阶段，完成对所有这些变量的分配，最后执行代码。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> a <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> b <span class=\"token operator\">=</span> <span class=\"token number\">30</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> c<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">multiply</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> f</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n <span class=\"token keyword\">var</span> g <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span>\n <span class=\"token keyword\">return</span> e <span class=\"token operator\">*</span> f <span class=\"token operator\">*</span> g<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\nc <span class=\"token operator\">=</span> <span class=\"token function\">multiply</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>执行上述代码时，JavaScript 引擎会创建一个全局执行上下文来执行全局代码。因此，在创建阶段，全局执行上下文将是这样的：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">GlobalExectionContext <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">LexicalEnvironment</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">EnvironmentRecord</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">Type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Object\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">// Identifier bindings go here</span>\n      <span class=\"token literal-property property\">a</span><span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span> uninitialized <span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">b</span><span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span> uninitialized <span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">multiply</span><span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span> func <span class=\"token operator\">></span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token literal-property property\">outer</span><span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span><span class=\"token keyword\">null</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">ThisBinding</span><span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span>Global Object<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">VariableEnvironment</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">EnvironmentRecord</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">Type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Object\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">// Identifier bindings go here</span>\n      <span class=\"token literal-property property\">c</span><span class=\"token operator\">:</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token literal-property property\">outer</span><span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span><span class=\"token keyword\">null</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">ThisBinding</span><span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span>Global Object<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>在执行阶段，变量赋值已经完成。因此，在执行阶段，全局执行上下文将如下所示。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">GlobalExectionContext <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n<span class=\"token literal-property property\">LexicalEnvironment</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">EnvironmentRecord</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">Type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Object\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">// Identifier bindings go here</span>\n      <span class=\"token literal-property property\">a</span><span class=\"token operator\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">b</span><span class=\"token operator\">:</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">multiply</span><span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span> func <span class=\"token operator\">></span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token literal-property property\">outer</span><span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span><span class=\"token keyword\">null</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">ThisBinding</span><span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span>Global Object<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n<span class=\"token literal-property property\">VariableEnvironment</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">EnvironmentRecord</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">Type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Object\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">// Identifier bindings go here</span>\n      <span class=\"token literal-property property\">c</span><span class=\"token operator\">:</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token literal-property property\">outer</span><span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span><span class=\"token keyword\">null</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">ThisBinding</span><span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span>Global Object<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>当调用函数 multiply(20, 30) 时，会创建一个新的函数执行上下文来执行函数代码。因此，在创建阶段，函数执行上下文将如下所示：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">FunctionExectionContext <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n<span class=\"token literal-property property\">LexicalEnvironment</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">EnvironmentRecord</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">Type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Declarative\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">// Identifier bindings go here</span>\n      <span class=\"token literal-property property\">Arguments</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">0</span><span class=\"token operator\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">length</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">outer</span><span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span>GlobalLexicalEnvironment<span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">ThisBinding</span><span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span>Global Object or <span class=\"token keyword\">undefined</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n<span class=\"token literal-property property\">VariableEnvironment</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">EnvironmentRecord</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">Type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Declarative\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">// Identifier bindings go here</span>\n      <span class=\"token literal-property property\">g</span><span class=\"token operator\">:</span> <span class=\"token keyword\">undefined</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">outer</span><span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span>GlobalLexicalEnvironment<span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">ThisBinding</span><span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span>Global Object or <span class=\"token keyword\">undefined</span><span class=\"token operator\">></span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>在此之后，执行上下文将进入执行阶段，即完成对函数内部变量的赋值。因此，在执行阶段，函数的执行上下文将如下所示：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">FunctionExectionContext <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n<span class=\"token literal-property property\">LexicalEnvironment</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">EnvironmentRecord</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">Type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Declarative\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">// Identifier bindings go here</span>\n      <span class=\"token literal-property property\">Arguments</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">0</span><span class=\"token operator\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">length</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">outer</span><span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span>GlobalLexicalEnvironment<span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">ThisBinding</span><span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span>Global Object or <span class=\"token keyword\">undefined</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n<span class=\"token literal-property property\">VariableEnvironment</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">EnvironmentRecord</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">Type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Declarative\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">// Identifier bindings go here</span>\n      <span class=\"token literal-property property\">g</span><span class=\"token operator\">:</span> <span class=\"token number\">20</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">outer</span><span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span>GlobalLexicalEnvironment<span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">ThisBinding</span><span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span>Global Object or <span class=\"token keyword\">undefined</span><span class=\"token operator\">></span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>函数完成后，返回值将存储在 c 中。之后，全局代码完成，程序结束。</p>\n<p>注–你可能已经注意到，在创建阶段，let 和 const 定义的变量没有任何相关值，但 var 定义的变量被设置为未定义。<br>这是因为在创建阶段，代码会扫描变量和函数声明，而函数声明会完整地存储在环境中，变量最初会被设置为未定义（var 的情况）或保持未初始化（let 和 const 的情况）。<br>这就是为什么你可以在声明 var 定义变量之前访问它们（尽管它们未定义），但在声明 let 和 const 变量之前访问它们时会出现引用错误的原因。<br>这就是我们所说的挂起。<br>注意：在执行阶段，如果 JavaScript 引擎无法在源代码中声明 let 变量的实际位置找到它的值，就会将其赋值为 undefined。</p>\n<h1 id=\"执行上下文的特点\"><a href=\"#执行上下文的特点\" class=\"headerlink\" title=\"执行上下文的特点\"></a>执行上下文的特点</h1><ol>\n<li>单线程</li>\n<li>同步执行</li>\n<li>全局唯一</li>\n<li>函数每调用一次生成一个新的执行上下文环境</li>\n</ol>\n"}],"PostAsset":[{"_id":"source/_posts/事件系统/mixin.png","slug":"mixin.png","post":"clkmc23nv0000w0uuenc98r49","modified":0,"renderable":0},{"_id":"source/_posts/执行上下文/执行栈.jpg","slug":"执行栈.jpg","post":"clktldo5q0000r4uugp57b3ix","modified":0,"renderable":0},{"_id":"source/_posts/执行上下文/词法环境的组成部分.jpg","slug":"词法环境的组成部分.jpg","post":"clktldo5q0000r4uugp57b3ix","modified":0,"renderable":0},{"_id":"source/_posts/执行上下文/环境记录器.jpg","slug":"环境记录器.jpg","post":"clktldo5q0000r4uugp57b3ix","modified":0,"renderable":0}],"PostCategory":[{"post_id":"clkmc23nv0000w0uuenc98r49","category_id":"clkmc6ern0000vouu4ocog7mb","_id":"clkmc6ero0001vouub68pexjl"},{"post_id":"clktldo5q0000r4uugp57b3ix","category_id":"clktldo5t0001r4uuh0iz3mec","_id":"clktldo5v0003r4uu0a75ba1m"}],"PostTag":[{"post_id":"clkl0brca0000youughb59jgv","tag_id":"clkkzb6yq00014ouu95mwer8v","_id":"clkl0brce0001youufyrzbg89"},{"post_id":"clkmc23nv0000w0uuenc98r49","tag_id":"clkkzb6yq00014ouu95mwer8v","_id":"clkmc5xqp0001fouu5mvjfn5f"},{"post_id":"clkmc23nv0000w0uuenc98r49","tag_id":"clkmc5xqo0000fouu49cdbjo5","_id":"clkmc5xqq0002fouudmf22p8e"},{"post_id":"clktldo5q0000r4uugp57b3ix","tag_id":"clkmc5xqo0000fouu49cdbjo5","_id":"clktldo5v0002r4uubx6zhl0t"}],"Tag":[{"name":"Typora","_id":"clkkz43sy0002e0uu21ewhjt3"},{"name":"Markdown","_id":"clkkz43sy0003e0uu3l51b4li"},{"name":"React","_id":"clkkzb6yq00014ouu95mwer8v"},{"name":"JavaScript","_id":"clkmc5xqo0000fouu49cdbjo5"}]}}